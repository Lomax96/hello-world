USE [NSPCC_Supporter_Portfolio]
GO
/****** Object:  StoredProcedure [dbo].[sp_UpdateSupporterPortfolio]    Script Date: 9/12/2019 10:56:48 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











/***************************************************************************************************
Procedure:          dbo.sp_UpdateSupporterPortfolio
Create Date:        17/01/2017
Author:             Tom Gordon
Description:        This procedure creates the tables associated with AL Support Portfolio for NSPCC. 
					The procedure truncates the tables, and then recreates them from the golden records. 
					In this case this information is provided from AS400 Master. 
					
Affected table(s):  [dbo].[Transaction_Table]
                    [dbo].[Supporter_Portfolio_Supporters]
					[dbo].[TRibuteFix_EARLIEST]			
					[dbo].[TributeFix_LATEST]
					[dbo].[SCV_Supporters]
					[dbo].[First_Transaction]
					[dbo].[First_Transaction_Gross]
					[dbo].[Last_Sum_Transaction]
					[dbo].[Last_Sum_Transaction_Gross]
					[dbo].[LFS_NumberOfActions]

Used By:            Business Insight, Data Quality

Usage:              EXEC dbo.sp_UpdateSupporterPortfolio

                    The log associated with this procedure is called '[dbo].[UpdateRunLog]' from the '[NSPCC_Supporter_Portfolio]'.
					Ensure that any updated sections have been commented with a key to track or locate. 
					For example 0w3nG4rr1ty is a key to see sections Owen Garrity has made changes to the documents as per 
					the change request of ticket 220. 

					IMPORTANT: 
					If you are going to run any tests on this procedure, tests should be ran after 10am through weekdays.
					Confirm beforehand with Andrew, and DO NOT alter the procedure. Instead create an updated procedure 
					that will later be renamed by Andrew once you have emailed him across the runtime for the updated
					procedure {test} and have made sure no errors have occured. 

****************************************************************************************************
SUMMARY OF CHANGES
Date(yyyy-mm-dd)    Author				Ref				 Comments
------------------- ------------------- ------------     ---------------------------------------------------------
2018-09-12          Owen Garrity		0w3nG4rr1ty		 Adding in Valx and Little Star Segments into the procedure
														 with updated definitions for Tribute Fund Holders, 
														 Tribute Donations, Corporate Supporters, and Lottery Players  
														                          
2018-11-05			Owen Garrity		0w3nG4rr1ty		 I updated the Last Sum Transaction Gross with changes to the 
														 how it was pulling through null due to a where clause being added 

2018-11-22			Owen Garrity		0w3nG4rr1ty		 There was an issue with Value Exchange first value changing with each b														   build, this was a mixture of rounding format on the last table they															   entered, as well as having two orders on the same day and the order by not 
														 being able to distinguish which date to choose.	
														 
2019-02-06			Owen Garrity		0w3nG4rr1ty		Made changes with Ashley to order by the transaction date, although it appears the change had														already been made in the First_Transaction table from the First_Transaction_Gross. 	
	
2019-02-06			Owen Garrity		0wenG4rr1ty		Making changes to the definition of the Segment 'Non Sporting Mass Participation Events' based of														the supporter ticket 292 from NSPCC 								 	

2019-24-04			Ashley Lomax		45hl3yL0m4x		Made changes to pull in the vw_Supporter_analysis and vw_supporters_analysis
														from staging and SCV instead of vw_supporter and vw_supporters
2019-06-06			Ashley Lomax		45h13yL0m4x		Removed NumberofAction Updates on current update query. Added in truncate/Insert and updates to NumberofActions field

***************************************************************************************************/





ALTER procedure  [dbo].[sp_UpdateSupporterPortfolio] as
-- Select database


declare @RunId int
declare @StageOrderId int
declare @Stage varchar(200)
declare @ErrorMessage nvarchar(4000)
declare @ErrorSeverity int
declare @ErrorState int


-----------------------------------------------------------------------------------
-- Beginning the Error Log 

set @RunId = (select runid+1 from vw_UpdateRunLog_Current)
set @stageorderid = 0
set @stage = 'Begin Run'



--Record process start

insert into 
	UpdateRunLog
	(
	RunID,
	StageOrderId,
	Stage,
	Success,
	RunDateTime
	)
select
	@RunId,
	@StageOrderId,
	@Stage,
	'Y',
	getdate()



/*********************************************************************************************************/
-- Create SCV DB supporter table

 
set @Stage = 'Truncate SCV Supporters Table'
set @StageOrderId = @StageOrderId+1


begin try
 
truncate table [NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try

 
begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch
-----------------------------------------------------------------------------------



set @Stage = 'Drop SCV Supporter Table Index'
set @StageOrderId = @StageOrderId+1

begin try

drop Index [SCV_Supporters].idx_ContactId

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- Beginning population of the SCV Support Table 

--45hl3yL0m4x / change to pull in analysis view
set @Stage = 'Populate SCV Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


truncate table[dbo].[SCV_Supporters]

insert into [NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters]
	(
	ContactId,
	Listsource1,
	CreationDateYYYYMMDD,
	FormattedCreationDateYYYYMMDD,
	SupporterStatusCode,
	MailingIndicators1_99
	)
select
	a.ContactId,
	a.Listsource1,
	a.MinDate CreationDateYYYYMMDD,
	a.MinDate FormattedCreationDateYYYYMMDD,
	a.SupporterStatusCode,
	a.MailingIndicators1_99
from
	[NSPCC_SCV].[dbo].[vw_supporters_Analysis] a 
	--[NSPCC_SCV].[dbo].[vw_supporters] a
--[NSPCC_Supporter_Portfolio].[dbo].[vw_supporters] a

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- Creating the Support SCV Supporter Table Index


set @Stage = 'Create SCV Supporters Table Index'
set @StageOrderId = @StageOrderId+1

begin try

create index idx_ContactId
on [NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] (ContactId)

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- Clear current Staging Supporters Table

set @Stage = 'Truncate Staging Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/
-- Create Staging DB supporter table

truncate table [NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


-----------------------------------------------------------------------------------
-- Populating Staging Supporter Table
--45hl3yL0m4x / changes to pull in analysis view

set @Stage = 'Populate Staging Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters]
	(
	ContactId,
	b.SupporterNumber
	)
select 
	b.ContactId,
	b.SupporterNumber
from
	(
	Select
		Contactid,
		SupporterNumber,
		ROW_NUMBER() over(Partition by SupporterNumber order by supporternumber desc) rown
	from
		[NSPCC_Staging].[dbo].[vw_Supporter_Analysis]
		--[NSPCC_Staging].[dbo].[vw_Supporter]
	) b
where
	b.rown = 1
--[NSPCC_Supporter_Portfolio].[dbo].[vw_Supporter] b
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- Clearing the Master Supporter Table 

set @Stage = 'Truncate AS400Master_Supporter_Activities Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/
-- Create Supporter Activity

truncate table [NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Supporter_Activities]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- Populate Activity table

set @Stage = 'Populate AS400Master_Supporter_Activities Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Supporter_Activities]
Select
	c.[N£SPNO] SupporterNumber,
	0 ContactId,
	c.[N£VACD] ActivityCode,
	c.[N£VSYR] ActivityYear,
	c.[N£VCCD] ActivityActionCode,
	c.[N£VSAD] ActivityDate,
	cast(null as datetime) FormattedActivityDate,
	c.QBID
from
	[NSPCC_AS400Master].[dbo].[N£VS_Supporter_Activities_MASTER] c
--[NSPCC_Supporter_Portfolio].[dbo].[N£VS_Supporter_Activities_MASTER] c
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


-----------------------------------------------------------------------------------

set @Stage = 'Format Activity Date on AS400Master_Supporter_Activities Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Update activity Date

update
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Supporter_Activities]
set
	FormattedActivityDate = case when isdate(ActivityDate) = 1 then Convert(datetime, ActivityDate,112) else null end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------


set @Stage = 'Add Contact ID to AS400Master_Supporter_Activities Table'
set @StageOrderId = @StageOrderId+1

begin try


/*
create index sup on [AS400Master_Supporter_Activities] (SupporterNumber)
 
 Select count (*) from 
 AS400Master_Supporter_Activities
 drop index sup on AS400Master_Supporter_Activities REBUILD			-- this added 2 hrs onto the build 
 */




--add in contactid
Update
	a
set
	ContactId = b.Contactid
from
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Supporter_Activities] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
on
	a.SupporterNumber = b.SupporterNumber
where 
len (a.SupporterNumber) > 0


;



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------

set @Stage = 'Truncate Transaction_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/
/*********************************************************************************************************/

-- Create Transaction Table

-- 0w3nG4rr1ty This transaction table is pulled from the Master table with the following keys being used: 


/**

Transaction table ID Link : [N£TNCM]
Committee Code Master link to Transaction : [N£CMCD]

[N£CMSD] as CommitedCode_Short
Which will be taken from the Committee Code Master 

 **/

truncate table [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try

-----------------------------------------------------------------------------------

begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- 0w3nG4rr1ty Tribute {1}
set @Stage = 'Populate Transaction_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table]
	(
	  Supporternumber
	, TransactionNumber
	, TransactionDonationType
	, [TransactionSubscriptionNo]
	, TransactionDate
	, Receipt_DonationValue
	, LinkforCommittee -- This is the new column being added 
	, QBID
	)
SELECT a.[N£SPNO] as Supporternumber
      ,a.[N£TNNO] as TransactionNumber
      ,a.[N£TNDT] as TransactionDonationType
	  ,a.[N£TNSN] as TransactionSubscriptionNo
      ,a.[N£8045] as TransactionDate
      ,a.[N£TNRV] as Receipt_DonationValue
	  ,a.[N£TNCM] as LinkforCommittee -- I have brought this through so that I can join later for the Tribute Fund Donations. 
	  ,a.QBID
  from  [NSPCC_AS400Master].[dbo].[N£TN_Transaction_Table_Master] as a
left join (select [N£SPNO], [N£TNNO] as  [N£TNNO] from  [NSPCC_AS400Master].dbo.[N£TNEX_MASTER]
			where [N£TNEXNG] !=0
			union all 
			select [N£SPNO], [N£TNEXNG]  as [N£TNNO] from  [NSPCC_AS400Master].dbo.[N£TNEX_MASTER]
			where [N£TNEXNG] !=0) as b
on cast(a.[N£SPNO] as int) = b.[N£SPNO] and cast(a.[N£TNNO] as int) = b.[N£TNNO]
where b.[N£TNNO] is null

;

/*
alter index ALL on [Transaction_Table]  REBUILD

drop index [idx_tdp]on [Transaction_Table]
drop index [supno] on [Transaction_Table]
*/




insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

------------------------------------------------------------------------------------


end catch


set @Stage = 'Truncate First_Transaction_Gross Table'
set @StageOrderId = @StageOrderId+1

begin try


-----------------------------------------------------------------------------------
-- Taking down from the Transaction Table 
-- 0w3nG4rr1ty 

truncate table [NSPCC_Supporter_Portfolio].[dbo].[First_Transaction_Gross]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


-----------------------------------------------------------------------------------
-- 0w3nG4rr1ty Tribute {2}
--


set @Stage = 'Populate First_Transaction_Gross Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[First_Transaction_Gross]
	(
	SupporterNumber,
	[TransactionNumber],
	TransactionDonationType,
	LinkforCommittee
	)
Select 
	a.Supporternumber,
	a.TransactionNumber,
	a.TransactionDonationType,
	a.LinkforCommittee
From 
(Select
	SupporterNumber,
	ROW_NUMBER() OVER(PARTITION BY 	SupporterNumber, TransactionDonationType ORDER BY [TransactionNumber]  ASC) as [Row], -- OG AS 06022019 06-02-2019 cannot order by the transaction date here as it is only being formatted once it enters this table 0w3nG4rr1ty
	cast([TransactionNumber] as int) [TransactionNumber],
	TransactionDonationType,
	LinkforCommittee
from
	[NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table]) as a
Where a.[Row] = 1



;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- 0w3nG4rr1ty 

set @Stage = 'Add Date and Value to First_Transaction_Gross Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	TransactionDate = b.TransactionDate,
	Receipt_DonationValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction_Gross] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] b
on
	a.TransactionNumber = b.TransactionNumber
and
	a.SupporterNumber = b.Supporternumber
and
	a.TransactionDonationType = b.TransactionDonationType
where
a.TransactionNumber is not null 
and 
a.SupporterNumber is not null
and
a.TransactionDonationType is not null


;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- 0w3nG4rr1ty 

set @Stage = 'Format Transaction Date on First_Transaction_Gross Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction_Gross]
set
	FormattedTransactionDate = case when isdate(TransactionDate) = 1 then Convert(datetime, transactiondate,112) else null end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- 0w3nG4rr1ty 

set @Stage = 'Truncate Last_Sum_Transaction_Gross Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Create last/sum transaction table

truncate table [NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- 0w3nG4rr1ty 

set @Stage = 'Populate Last_Sum_Transaction_Gross Table'
set @StageOrderId = @StageOrderId+1

begin try



insert into [NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross]
	(
	SupporterNumber,
	[TransactionNumber],
	TransactionDonationType,
	RowNumber,
	TotalValue
	)
select 
	a.SupporterNumber,
	max(cast(a.[TransactionNumber] as int)) [TransactionNumber],
	a.TransactionDonationType,
	Count(*) RowNumber,
	Sum(Receipt_DonationValue) TotalValue
from 
	[NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] a


-- 0w3nG4rr1ty 5/11/2018 Removed due to causing the Active segments to come back with 0 counts
--where
--a.SupporterNumber is not null 
--and 
--a.TransactionDonationType is not null
--and 
--a.Receipt_DonationValue is not null


group by
	a.SupporterNumber,
	a.TransactionDonationType	


	;


	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

-----------------------------------------------------------------------------------
-- 0w3nG4rr1ty REF for Andy

set @Stage = 'Add Date and Value to Last_Sum_Transaction_Gross Table'
set @StageOrderId = @StageOrderId+1

begin try


/*
create index tn on [NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross] (TransactionNumber)

create index sn on [NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross] (SupporterNumber)

create index tnd on [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] (TransactionNumber)

create index snd on [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] (SupporterNumber)

select count (*) from [NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross]			-- 7843593

select count (*) from [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table]						-- 

Drop index tnd on [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table]

Drop index snd on [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table]


alter index  ALL on [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] REBUILD


- removed idx on tramnsaction table as it is fCking massive and took hours. 

alter index  ALL on [NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross] REBUILD


Drop index tn on [NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross]


*/


-- 265728089

update
	a
set
	TransactionDate = b.TransactionDate,
	Receipt_DonationValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] b
on
	a.TransactionNumber = b.TransactionNumber
and
	a.SupporterNumber = b.Supporternumber
and
	a.TransactionDonationType = b.TransactionDonationType

-- 0w3nG4rr1ty 5/11/2018 Removed due to causing the Active segments to come back with 0 counts
--where
--a.SupporterNumber is not null 
--and 
--a.TransactionDonationType is not null
--and 
--a.Receipt_DonationValue is not null

;




-- nett tables down to a supporter level



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Format Transaction Date on Last_Sum_Transaction_Gross Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross]
set
	FormattedTransactionDate = case when isdate(TransactionDate) = 1 then Convert(datetime, transactiondate,112) else null end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate First_Transaction Table'
set @StageOrderId = @StageOrderId+1

begin try


truncate table [NSPCC_Supporter_Portfolio].[dbo].[First_Transaction]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Drop First_Transaction Table Index'
set @StageOrderId = @StageOrderId+1

begin try

drop index [First_Transaction].idx_firsttrans

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

----------------------------------------------------------------------------------
-- 0w3nG4rr1ty Tribute {3} Last Table
set @Stage = 'Populate First_Transaction Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction]
	(
	ContactId ,
	[TransactionNumber] ,
	TransactionDonationType ,
	FormattedTransactionDate ,
	Receipt_DonationValue ,
	RowNumber,
	LinkforCommittee
	)
select
	Contactid,
	[TransactionNumber],
	TransactionDonationType,
	FormattedTransactionDate,
	Receipt_DonationValue,
	RowNumber,
	LinkforCommittee
from
	(
	Select
		b.Contactid,
		a.[TransactionNumber],
		a.FormattedTransactionDate,
		a.Receipt_DonationValue,
		a.TransactionDonationType,
		ROW_NUMBER () over (partition by b.ContactId, a.TransactionDonationType order by a.FormattedTransactionDate, a.[TransactionNumber] asc) RowNumber, -- 0w3nG4rr1ty Added these changes to sort duplicate transactions on the same day.
		a.LinkforCommittee
	from
		[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction_Gross] a
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
	on
		a.SupporterNumber = b.SupporterNumber
	where 
		a.SupporterNumber is not null
	) c
where
	c.RowNumber = 1



	;  
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate Last_Sum_Transaction Table'
set @StageOrderId = @StageOrderId+1

begin try


truncate table [NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Drop Last_Sum_Transaction Table Index'
set @StageOrderId = @StageOrderId+1

begin try

drop index [Last_Sum_Transaction].idx_lasttrans
 
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


/*
-- create index sup on [dbo].[Staging_Supporters] ([supporternumber])
--Select count(*) from  [dbo].[Staging_Supporters]
alter index ALL  on [dbo].[Staging_Supporters] REBUILD
drop index [sup] on [dbo].[Staging_Supporters]				-- removed idx as might be slowing it down 
*/

set @Stage = 'Populate Last_Sum_Transaction Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction]
	(
	ContactId,
	TransactionNumber,
	TransactionDonationType,
	TotalValue,
	RowNumber
	)
Select
	Contactid,
	max([TransactionNumber]) [TransactionNumber],
	TransactionDonationType,
	sum(TotalValue) TotalValue,
	sum(RowNumber) RowNumber 
from
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
on
	a.SupporterNumber = b.SupporterNumber
where 
a.SupporterNumber is not null
and 
TransactionDonationType is not null
group by
	Contactid,
	TransactionDonationType


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Date and Value to Last_Sum_Transaction Table'
set @StageOrderId = @StageOrderId+1

begin try


update
	a
set
	FormattedTransactionDate = b.FormattedTransactionDate,
	Receipt_DonationValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction_Gross] b
on
	a.TransactionNumber = b.TransactionNumber
and
	a.TransactionDonationType = a.TransactionDonationType
where 
a.TransactionNumber is not null 
and 
a.TransactionDonationType is not null



;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Create Last_Sum_Transaction Table Index'
set @StageOrderId = @StageOrderId+1

begin try



-- create indexes

create index idx_lasttrans
on [NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] (TransactionDonationType)


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Create First_Transaction Table Index'
set @StageOrderId = @StageOrderId+1

begin try


create index idx_firsttrans
on [NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] (TransactionDonationType)

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate AS400Master_Campaigner_Actions Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Campaigner_Actions]


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate AS400Master_Campaigner_Actions Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Campaigner_Actions]	
	(
	SupporterNumber  ,
	RequestDate ,
	FormattedRequestDate ,
	ActionCode  ,
	ContactID ,
	QBID
	)
select
	e.[N£SPNO] SupporterNumber,
	e.[N£AXDT] RequestDate,
	Cast(Null as datetime) FormattedRequestDate,
	e.[N£ACCD] ActionCode,
	0 ContactID,
	QBID
from
	[NSPCC_AS400Master].[dbo].[N£AX_Campaigner_Actions_MASTER] e
--[NSPCC_Supporter_Portfolio].[dbo].[N£AX_Campaigner_Actions_MASTER] e


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Format Request Date on AS400Master_Campaigner_Actions Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Update Requestdate

update
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Campaigner_Actions]
set
	FormattedRequestDate= case when isdate(RequestDate) = 1 then Convert(datetime, RequestDate,112) else null end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Contact ID to AS400Master_Campaigner_Actions Table'
set @StageOrderId = @StageOrderId+1

begin try

--add in contactid



Update
	a
set
	ContactId = b.Contactid
from
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Campaigner_Actions] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
on
	a.SupporterNumber = b.SupporterNumber
where 
len (a.SupporterNumber) > 0


;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate Staging_Mailing_Indicator_Changes_Table Table'
set @StageOrderId = @StageOrderId+1

begin try
/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[Staging_Mailing_Indicator_Changes_Table]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate Staging_Mailing_Indicator_Changes_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Staging_Mailing_Indicator_Changes_Table]
	(
	SupporterNumber ,
	MailingIndicatorPosition ,
	MailingIndicatorSetTo,
	[MailingIndicatorChangeDate] ,
	FormattedMailingIndicatorChangeDate ,
	ContactID 
	)
select
	f.SupporterNumber,
	f.MailingIndicatorPosition,
	f.MailingIndicatorSetTo,
	f.[MailingIndicatorChangeDate],
	Cast(Null as datetime) FormattedMailingIndicatorChangeDate,
	0 ContactID 
from
	[NSPCC_Staging].[dbo].[vw_Mailing_Indicator_Changes_Table] f
--[NSPCC_Supporter_Portfolio].[dbo].[vw_Mailing_Indicator_Changes_Table] f

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Format MI Change Date on Staging_Mailing_Indicator_Changes_Table Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Update FormattedMailingIndicatorChangeDate

update
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Mailing_Indicator_Changes_Table]
set
	FormattedMailingIndicatorChangeDate= case when isdate([MailingIndicatorChangeDate]) = 1 then Convert(datetime, [MailingIndicatorChangeDate],112) else null end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Contact ID to Staging_Mailing_Indicator_Changes_Table Table'
set @StageOrderId = @StageOrderId+1

begin try	

--add in contactid




Update
	a
set
	ContactId = b.Contactid
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Mailing_Indicator_Changes_Table] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
on
	a.SupporterNumber = b.SupporterNumber
where 
a.SupporterNumber is not null

;



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate Staging_Appeal_Codes_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[Staging_Appeal_Codes_Table]



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate Staging_Appeal_Codes_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Staging_Appeal_Codes_Table]
	(
	AppealCode,
	AppealCodeAsk
	)
Select
	z.AppealCode,
	z.AppealCodeAsk 
from
 [NSPCC_Staging].[dbo].[vw_Appeal_Codes_Table] z
 --[NSPCC_Supporter_Portfolio].[dbo].[vw_Appeal_Codes_Table] z

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate Staging_Subscriptions_Table Table'
set @StageOrderId = @StageOrderId+1

begin try
 

/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate Staging_Subscriptions_Table Table'
set @StageOrderId = @StageOrderId+1

begin try
----- 0w3nG4rr1ty THIS IS WHERE THE ASSOCIATED VALUES FEED FROM
insert into [NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table]
	(
	SubLinkId,
	SupporterNumber,
	CreationDate,
	FormattedCreationDate,
	ActivityStatusFlag,
	AnnualValueofSubscription,
	TotalValue,
	AppealCode,
	FirstPaymentDate,
	FormattedFirstPaymentDate,
	LastPaymentDate ,
	FormattedLastPaymentDate ,
	[SubscriptionSequenceNo],
	RowNumberCreation ,
	ContactID 
	)
SELECT cast(a.[N£SPNO] as nvarchar)+'_'+a.[N£SBNO]  as SubLinkID
	  ,a.[N£SPNO] as Supporternumber
	  ,a.[N£SB@C] as CreationDate
	  ,Cast(Null as datetime) FormattedCreationDate
      ,a.[N£SBAI] as ActivityStatusFlag
      ,a.[N£SBAV] as AnnualValueofSubscription
      ,a.[N£SBTV] as TotalValue
      ,case when len(a.[N£APCD])<6 then replicate('0',6-len(a.[N£APCD]))+a.[N£APCD]
				else a.[N£APCD]
				end as AppealCode
      ,a.[N£8035] as FirstPaymentDate
	  ,Cast(Null as datetime) FormattedFirstPaymentDate
      ,a.[N£8036] as LastPaymentDate
	  ,Cast(Null as datetime) FormattedLastPaymentDate
      ,cast(a.[N£SBNO] as int) as SubscriptionSequenceNo
	  ,0 RowNumberCreation
	  ,0 ContactID
	  -- select count (*) 
FROM [NSPCC_AS400Master].[dbo].[N£SB_Subscription table_MASTER] as a





insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Format Dates on Staging_Subscriptions_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Update FormattedCreationDate

update
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table]
set
	FormattedCreationDate= case when isdate(CreationDate) = 1 then Convert(datetime, CreationDate,112) else null end,
	FormattedFirstPaymentDate= case when isdate(FirstPaymentDate) = 1 then Convert(datetime, FirstPaymentDate,112) else null end,
	FormattedLastPaymentDate= case when isdate(LastPaymentDate) = 1 then Convert(datetime, LastPaymentDate,112) else null end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Contact ID to Staging_Subscriptions_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

--add in contactid
Update
	a
set
	ContactId = b.Contactid
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
on
	a.SupporterNumber = b.SupporterNumber
where
a.supporternumber is not null



;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add RowNumber to Staging_Subscriptions_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

-- UpdateRowNumber 

Update 
	a
set
	RowNumberCreation = b.RowNumberCreation
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table] a
inner join
	(
	Select
		SubLinkId,
		ROW_NUMBER () over (partition by ContactId order by CreationDate)  RowNumberCreation
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table]
	) b
on
	a.SubLinkId = b.SubLinkId
where 
len (a.sublinkid) > 0 


;



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate Staging_Legacy_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate Staging_Legacy_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table]
	(
	SupporterNumber,
	LegacyLifecycleStage,
	LifecycleUpdateDate,
	FormattedLifecycleUpdateDate,
	CreationDateLegacy,
	FormattedCreationDateLegacy,
	ContactId
	)
select 
	h.[N£SPNO] SupporterNumber,
	h.[N£LGRP] LegacyLifecycleStage,
	h.[N£8029] LifecycleUpdateDate,
	Cast(Null as datetime) FormattedLifecycleUpdateDate,
	h.[N£LG@C] CreationDateLegacy,
	Cast(Null as datetime) FormattedCreationDateLegacy,
	0 ContactId
from
	[NSPCC_Staging].[dbo].[vw_Legacy_Table] h
--[NSPCC_Supporter_Portfolio].[dbo].[vw_Legacy_Table] h

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Format Lifecycle Update Date on Staging_Legacy_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Update FormattedLifecycleUpdateDate

update
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table]
set
	FormattedLifecycleUpdateDate= case when isdate(LifecycleUpdateDate) = 1 then Convert(datetime, LifecycleUpdateDate,112) else null end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Format Creation Date on Staging_Legacy_Table Table'
set @StageOrderId = @StageOrderId+1

begin try
-- Update FormattedCreationDateLegacy

update
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table]
set
	FormattedCreationDateLegacy= case when isdate(CreationDateLegacy) = 1 then Convert(datetime, CreationDateLegacy,112) else null end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Contact ID to Staging_Legacy_Table Table'
set @StageOrderId = @StageOrderId+1

begin try	

--add in contactid
Update
	a
set
	ContactId = b.Contactid
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
on
	a.SupporterNumber = b.SupporterNumber
where 
a.supporternumber is not null


;

	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate Staging_WeeklyLottery_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/
-- Create Weekly Lottery Table


truncate table [NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate Staging_WeeklyLottery_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

insert  into [NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]
	(
	SupporterNumber,
	Lottery_Player_Status_Active_Inactive,
	Number_Of_Lottery_Lines,
	Monthly_Payment_Value,
	First_Lottery_Play_Date,
	Last_Lottery_Play_Date,
	ContactId,
	Qbid
	)
select
	i.Supporter_Number SupporterNumber,
	i.Lottery_Player_Status_Active_Inactive,
	Number_Of_Lottery_Lines,
	Monthly_Payment_Value,
	First_Lottery_Play_Date,
	Last_Lottery_Play_Date,
	0 ContactId,
	Qbid
from
	[NSPCC_Staging].[dbo].[vw_WeeklyLotteryTable] i
--[NSPCC_Supporter_Portfolio].[dbo].[vw_WeeklyLotteryTable] i

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Format Dates on Staging_WeeklyLottery_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Update FormattedFirst_Lottery_Play_Date and FormattedLast_Lottery_Play_Date

update
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]
set
	FormattedFirst_Lottery_Play_Date= case when isdate(First_Lottery_Play_Date) = 1 then Convert(datetime, First_Lottery_Play_Date,112) else null end,
	FormattedLast_Lottery_Play_Date= case when isdate(Last_Lottery_Play_Date) = 1 then Convert(datetime, Last_Lottery_Play_Date,112) else null end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Contact ID to Staging_WeeklyLottery_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

--add in contactid
Update
	a
set
	ContactId = b.Contactid
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
on
	a.SupporterNumber = b.SupporterNumber
where 
len (a.supporternumber) > 0 


;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate AS400Master_PayrollGiving_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate AS400Master_PayrollGiving_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table]	
	(
	SupporterNumber,
	ActivityFlag,
	StartDate,
	FormattedStartDate,
	LastPayrollPaymentDate,
	FormattedLastPayrollPaymentDate,
	Amount,
	Frequency,
	ContactId,
	qbid	
	)
select
	j.[N£SPNO] SupporterNumber,
	j.[N£PGAF] ActivityFlag,
	j.[N£PGSD] StartDate,
	Cast(Null as datetime) FormattedStartDate,
	j.[N£PGLP] LastPayrollPaymentDate,
	Cast(Null as datetime) FormattedLastPayrollPaymentDate,
	j.[N£PGAM] Amount,
	j.[N£PGPF] Frequency,
	0 ContactId,
	qbid
from
	[NSPCC_AS400Master].[dbo].[N£PG_Payroll_Giving_MASTER] j




--[NSPCC_Supporter_Portfolio].[dbo].[N£PG_Payroll_Giving_MASTER] j

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Format Dates on AS400Master_PayrollGiving_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Update FormattedStartDate and FormattedLastPayrollPaymentDate

update
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table]
set
	FormattedStartDate= case when isdate(StartDate) = 1 then Convert(datetime, StartDate,112) else null end,
	FormattedLastPayrollPaymentDate= case when isdate(LastPayrollPaymentDate) = 1 then Convert(datetime, LastPayrollPaymentDate,112) else null end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Contact ID to AS400Master_PayrollGiving_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

--add in contactid
Update
	a
set
	ContactId = b.Contactid
from
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
on
	a.SupporterNumber = b.SupporterNumber



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate Staging_CommitteeOfficials_Table Table'
set @StageOrderId = @StageOrderId+1

begin try
/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[Staging_CommitteeOfficials_Table]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate Staging_CommitteeOfficials_Table Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Staging_CommitteeOfficials_Table]
	(
	SupporterNumber,
	OfficialCode,
	ContactId
	)
select
	k.Supporternumber SupporterNumber,
	k.OfficialCode,
	0 ContactId
from
	[NSPCC_Staging].[dbo].[vw_Committee_Officials_Table] k	
--[NSPCC_Supporter_Portfolio].[dbo].[vw_Committee_Officials_Table] k

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Contact ID to Staging_CommitteeOfficials_Table Table'
set @StageOrderId = @StageOrderId+1

begin try
--add in contactid

Update
	a
set
	ContactId = b.Contactid
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_CommitteeOfficials_Table] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
on
	a.SupporterNumber = b.SupporterNumber

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate Staging_RE_Contacts Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/
-- create Staging RE Contacts table


truncate table [NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate Staging_RE_Contacts Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts]
	(
	contactid,
	RecordsTableID,
	Constit_ID
	)
Select
	contactid,
	RecordsTableID,
	Constit_ID
from
	NSPCC_Staging.dbo.vw_RE_ContactsFS
--[NSPCC_Supporter_Portfolio].[dbo].vw_RE_ContactsFS

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate Staging_RE_Constit_Solicitors Table'
set @StageOrderId = @StageOrderId+1

begin try


/*********************************************************************************************************/
-- create Staging RE Constit Solicitors  table

truncate table [NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate Staging_RE_Constit_Solicitors Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors]
	(
	CONSTIT_ID,
	Solicitor_type
	)
Select
	CONSTIT_ID,
	Solicitor_type
from
	NSPCC_Staging.dbo.vw_constit_solicitors
--[NSPCC_Supporter_Portfolio].[dbo].vw_constit_solicitors



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate RE_Live_CONSTITUENT_CODES Table'
set @StageOrderId = @StageOrderId+1

begin try



truncate table [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES]



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate RE_Live_CONSTITUENT_CODES Table'
set @StageOrderId = @StageOrderId+1

begin try


insert into [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES]
	(
	CONSTIT_ID,
	CODE
	)
Select 
	CONSTIT_ID,
	CODE
from
	NSPCC_RE_LIVE.dbo.CONSTITUENT_CODES
--[NSPCC_Supporter_Portfolio].[dbo].CONSTITUENT_CODES
;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate RE_Live_Participants Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Participants]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate RE_Live_Participants Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Participants]
	(
	RecordsID,
	Status,
	Participation,
	EventID
	)
Select
	RecordsID,
	Status,
	Participation,
	EventID
from
	NSPCC_RE_LIVE.dbo.Participants
--[NSPCC_Supporter_Portfolio].[dbo].Participants

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate RE_Live_Actions Table'
set @StageOrderId = @StageOrderId+1

begin try
/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Actions]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate RE_Live_Actions Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Actions]
	(
    [RECORDS_ID]
    ,[STATUS]
    ,[TYPE],
	[ID],
	[COMPLETED_DATE],
	DTE
	)
SELECT 
    [RECORDS_ID]
    ,[STATUS]
    ,[TYPE],
		[ID],
	[COMPLETED_DATE],
	DTE
  FROM 
	NSPCC_RE_LIVE.[dbo].[ACTIONS]
--[NSPCC_Supporter_Portfolio].[dbo].[ACTIONS]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate RE_Live_SPECIAL_EVENT Table'
set @StageOrderId = @StageOrderId+1

begin try


/*********************************************************************************************************/

truncate table [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SPECIAL_EVENT]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate RE_Live_SPECIAL_EVENT Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SPECIAL_EVENT]
	(
    ID
    ,CATEGORY,
	TypeID,
	START_DATE
	)
SELECT 
    ID
    ,CATEGORY,
	TYPEID,
	START_DATE
  FROM 
	NSPCC_RE_LIVE.[dbo].SPECIAL_EVENT
--[NSPCC_Supporter_Portfolio].[dbo].SPECIAL_EVENT


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate RE_Live_CodeTables Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/

truncate table [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CodeTables]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate RE_Live_CodeTables Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CodeTables]
	(
    [CODETABLESID]
    ,[NAME]
	)
SELECT 
    [CODETABLESID]
    ,[NAME]
  FROM 
	NSPCC_RE_LIVE.[dbo].[CODETABLES]
--[NSPCC_Supporter_Portfolio].[dbo].[CODETABLES]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate RE_Live_TABLEENTRIES Table'
set @StageOrderId = @StageOrderId+1

begin try
/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_TABLEENTRIES]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate RE_Live_TABLEENTRIES Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_TABLEENTRIES]
	(
    [TABLEENTRIESID]
    ,[LONGDESCRIPTION]
	,[CODETABLESID]
	)
SELECT 
    [TABLEENTRIESID]
    ,[LONGDESCRIPTION]
	,[CODETABLESID]
  FROM 
	NSPCC_RE_LIVE.[dbo].[TABLEENTRIES]
--[NSPCC_Supporter_Portfolio].[dbo].[TABLEENTRIES]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try





begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate RE_Live_SolicitorType Table'
set @StageOrderId = @StageOrderId+1

begin try
/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SolicitorType]




insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate RE_Live_SolicitorType Table'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SolicitorType]
	(
    [TABLEENTRIESID]
    ,[LONGDESCRIPTION]
	)
SELECT 
    [TABLEENTRIESID]
    ,[LONGDESCRIPTION]
  FROM 
	[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_TABLEENTRIES] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CodeTables] b
on
	a.CODETABLESID = b.CODETABLESID
where
	b.NAME Like 'Solicitor Type'

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Truncate RE_Live_ConstituentCode Table'
set @StageOrderId = @StageOrderId+1

begin try
/*********************************************************************************************************/


truncate table [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_ConstituentCode] 

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate RE_Live_ConstituentCode Table'
set @StageOrderId = @StageOrderId+1

begin try




;
insert into [NSPCC_Supporter_Portfolio].[dbo].[RE_Live_ConstituentCode]
	(
    [TABLEENTRIESID]
    ,[LONGDESCRIPTION]
	)
SELECT 
    [TABLEENTRIESID]
    ,[LONGDESCRIPTION]
  FROM 
	[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_TABLEENTRIES] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CodeTables] b
on
	a.CODETABLESID = b.CODETABLESID
where
	b.NAME Like 'Constituent Codes'




	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Contact ID to EmailResponse Table'
set @StageOrderId = @StageOrderId+1

begin try
/*********************************************************************************************************/
-- email action (loaded in from response server)

--Add in contact id

;

update 
	e
set 
	[Contactid] = s.[ContactId]
from 
	[NSPCC_Supporter_Portfolio].[dbo].[EmailResponse] e
inner join 
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] s
on
	e.Urn = cast(s.[SupporterNumber] as nvarchar)
where 
e.urn is not null

;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

/*
set @Stage = 'Remove unmatched ContactIDs from EmailResponse Table'
set @StageOrderId = @StageOrderId+1

begin try

--get rid of non matches
delete from [NSPCC_Supporter_Portfolio].[dbo].[EmailResponse]
where contactid = -1

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = ''
set @StageOrderId = @StageOrderId+1

begin try

--set dodgy dates to null

update
	[NSPCC_Supporter_Portfolio].[dbo].[EmailResponse]
set
	DeliveryDate = null
where
	DeliveryDate < '01 Jan 1950'

	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = ''
set @StageOrderId = @StageOrderId+1

begin try

update
	[NSPCC_Supporter_Portfolio].[dbo].[EmailResponse]
set
	ClickDate = null
where
	ClickDate < '01 Jan 1950'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

*/
set @Stage = 'Truncate Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try




/***************************************************************************************************

Add in Supporters

***************************************************************************************************/

truncate table [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Active Regular Givers into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Insert Donors Into Supporter Portfolio

-- Active Regular Giver

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'001' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table] c
	where
		a.contactid = c.ContactID
	and
		c.ActivityStatusFlag = 'A'
	)		

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Lapsed Regular Givers into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try
-- Lapsed Regular Giver

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'002' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] c
on
	a.contactid = c.ContactId
and
	c.SegCode = '001'
where 
	 exists
	(
	select	
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table] d
	where
		a.contactid = d.ContactID
	)
and
	c.ContactId is null




	;



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Cash into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try
-- Cash

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'003' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType in ('CASH', 'LOTD')



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Text to Give into Supporter_Portfolio_Supporters Table - list source'
set @StageOrderId = @StageOrderId+1

begin try



--  Text to Give

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'004' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
where 
	a.ListSource1 in ('PSMS','SMS','SMS1','SMSC')
	;



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Text to Give into Supporter_Portfolio_Supporters Table - Transaction'
set @StageOrderId = @StageOrderId+1

begin try







insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'004' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] t
on
	a.ContactId = t.ContactId
and
	t.SegCode = '004'
where
	c.TransactionDonationType = 'SMS'
and
	t.ContactId is null






	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Active Payroll Giver into Supporter_Portfolio_Supporters Table - Transaction'
set @StageOrderId = @StageOrderId+1

begin try

/*
delete  
	a
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join

		[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.Contactid
where
	a.SegCode = '004'
and
	TransactionDonationType <> 'SMS'
	*/




-- Active Payroll Giver

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'005' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] c
on
	a.Contactid = c.Contactid
where
	c.TransactionDonationType = 'PAY'
and
	dateadd(year,-1,getdate()) < c.FormattedTransactionDate
and
	c.FormattedTransactionDate <= getdate()







insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Active Payroll Giver into Supporter_Portfolio_Supporters Table - PayrollGiving'
set @StageOrderId = @StageOrderId+1

begin try


insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'005' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table] d
on
	a.contactid = d.ContactId
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] c
on
	a.contactid = c.ContactId
and
	c.SegCode = '005'
where
	isnull(d.ActivityFlag,'') in ('','A','P','U')
and
	c.ContactId is null





insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Inactive Payroll Giver into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Inactive Payroll Giver

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'006' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
Left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] c
on
	a.Contactid = c.Contactid
Left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table] d
on
	a.contactid = d.ContactId
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] e
on
	a.contactid = e.ContactId
and
	e.SegCode = '005' -- Active Payroll Givers
where
	(
		c.TransactionDonationType = 'PAY'
	or 
		d.contactid is not null
	)
and
	e.ContactId is null


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Legacy Pledger into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Legacy Pledger

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'009' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table] c
on
	a.contactid = c.ContactId
where
	c.LegacyLifecycleStage = 5


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Legacy Intender into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Legacy Intender

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'008' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table] c
on
	a.contactid = c.ContactId
left outer join
	(
	select
		ContactId
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	where
		SegCode = '009' -- Legacy Pledgers
	) d
on
	a.contactid = d.ContactId
where
	c.LegacyLifecycleStage = 4
and
	d.ContactId is null


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Legacy Enquirers into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Legacy Enquirers

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'007' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table] c
on
	a.contactid = c.ContactId
left outer join
	(
	select
		ContactId
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	where
		SegCode in ('008','009') -- Legacy Intenders and Pledgers
	) d
on
	a.contactid = d.ContactId
where
	c.LegacyLifecycleStage = 3
and
	d.ContactId is null	



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Tribute Fund Donations into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


---- 0w3nG4rr1ty
-- Tribute Fund Donations



/*create index idx_tdp on [Transaction_Table] (TransactionDonationType)

Select distinct TransactionDonationType 
 from [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table]
	where TransactionDonationType  like '%TRIB%'			*/


-- do in 2 stages i think


-- first one using TransactionDonationType

----delete [dbo].[Supporter_Portfolio_Supporters] where segcode = '010'


insert into 
[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'010' SegCode
	-- select count (*) 
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	(
	Select distinct
		h.ContactId
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] as t
	Inner Join	
		[dbo].[Staging_Supporters] as h
	On
		h.SupporterNumber = t.Supporternumber
	Where 
		TransactionDonationType = 'TRIB'
	and 
	h.SupporterNumber is not null

		--and contactid = 117918 
		)		as c
on
	a.contactid = c.Contactid




-- 3190
;
-- SJBfix_20181010

--select * from [SCV_Supporters] where contactid = 117918

--  Second one using [N£CM_Committee_Code_MASTER]


-- add idx create index supno on [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table]  (supporternumber)
-- this will get created again each build with the rebuild idx at the beginning



insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'010' SegCode
	-- select count (distinct a.contactid)
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] as a

INNER JOIN
(
	Select distinct
              h.ContactId
               from
             [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] as t
       Inner Join    
              [dbo].[Staging_Supporters] as h
       On
              h.SupporterNumber = t.Supporternumber
	   Inner join 
	(
		select distinct [N£CMCD]
		from [NSPCC_AS400Master]..[N£CM_Committee_Code_MASTER] 
		where [N£CMSD] = 'Tribute'
	)			as x		
			
						on x.[N£CMCD] = t.LinkforCommittee 
	) as z									
											on z.contactid = a.contactid
		left join												-- left join  to ensure i dont add dupes to same tbl
	(	select distinct [contactid] 
		from [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]	
		where segcode = '010'	)		
				as  seg			
											on seg.contactid = a.contactid
where 
seg.contactid is null	
--and a.contactid = 117918  
		
;







/*
-- 308 -- ok, got an extra 308 here 

select count (*) from [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
where segcode = '010'

-- this will maybe adding dupes though	

select * from [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
where contactid = 117918 

*/


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Tribute Fundholders into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Tribute Fundholders ------------------------------------------------------------- 
/** For Andy: So because the change request asked for RE Constituent Code of 17855 "Tribute Fund Holder" I made a join from that lower table and pulled it up to the Supporter level**/ 

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
-- Final Join
Select distinct 
		f.[ContactId], 
		'011' SegCode
From 
	[dbo].[SCV_Supporters] f
LEFT JOIN
			-- Second Join
			(Select c.[Constit_ID]
			,[ContactID]
			,[CODE]
			,[LONGDESCRIPTION]
			,[TABLEENTRIESID]
			From 
				[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] c
			LEFT JOIN
						-- Initial Join
						(Select *
						From 
							[dbo].[RE_Live_CONSTITUENT_CODES] a
						LEFT JOIN
							[dbo].[RE_Live_ConstituentCode] b
						On 
							a.CODE = b.TABLEENTRIESID) d

			On c.[Constit_ID] = d.[Constit_ID]) e

On f.[ContactId] = e.[ContactId]
Where 
	substring(MailingIndicators1_99,7,1) = 'Y'
OR
	[TABLEENTRIESID] = '17855'  




	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert In Memory Donations into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- In Memory Donations

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'012' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'IMO'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Funeral Director into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Funeral Director

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'013' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
where
	a.SupporterStatusCode = '2' --CLEAR


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try




 
begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Schools into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Schools

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'014' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
where
	a.SupporterStatusCode in (
							'4', --SENIOR SCHOOLS
							'8'  --SCHOOL
							)


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Raffle Donation into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Raffle Donation

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'015' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'RAFD'

	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Raffle Purchaser into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Raffle Donation

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'016' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'RAFS'



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Active Lottery Player into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Active Lottery Player ------------------------------------------------------ 0w3nG4rr1ty 4.0  Reference for my updates
/** Just needed to comment out the date restriction on this and allow for A or P. **/ 

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'017' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table] c
on
	a.contactid = c.ContactId
where
	c.Lottery_Player_Status_Active_Inactive in ('A','P')


	;
	
	--c.FormattedLast_Lottery_Play_Date	> DATEADD(MONTH, -12, getdate())
	-- Removed due to change request 

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Inactive Lottery Player into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Inactive Lottery Player

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'018' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table] c
on
	a.contactid = c.ContactId
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] d
on
	a.contactid = d.ContactId
and
	d.SegCode = '017' -- Active Lottery Player
where
	c.Lottery_Player_Status_Active_Inactive in ('I')
and
	d.ContactId is null


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Campaigner Action into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Campaigner Action

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'019' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Campaigner_Actions] c
on
	a.contactid = c.ContactID
where
	c.ActionCode is not null
or
	SUBSTRING(a.MailingIndicators1_99,72,1) = 'Y'



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Christmas Card Donation into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Christmas Card Donation

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'020' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'TRAD'



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try




begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Christmas Card Purchaser into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



-- Christmas Card Purchaser

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'021' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'SALE'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Campaigner LFS Non Player into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Campaigner LFS Non Player


;


insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'022' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Supporter_Activities] c
on
	a.contactid = c.ContactId
where
	c.ActivityActionCode in ('LFSFAILED','LFSZERO')
or
	left(a.ListSource1,2) = 'LS'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Delete Players from Campaigner Non Players in Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

delete  
	a
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.Contactid	
where
	a.SegCode = '022'
and
	isnull(TransactionDonationType,'') = 'LFS'
	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert LFS Purchaser into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try




-- LFS Purchaser

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'023' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'LFS'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Product Purchased into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Product Purchased

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'024' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'PROD'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Event Paid Participants into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Event Paid Participants

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'025' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'EVNT'

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Sponsorship into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Sponsorship

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'026' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'SPON'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Trust Donations into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

/*
-- Big Board Game Participation

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'027' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Supporter_Activities] c
on
	a.contactid = c.Contactid
where
	c.ActivityCode = 'RBBGD'



*/
-- Trust Donations

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'028' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'TRUS'
or
	a.SupporterStatusCode = '7'

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Clubs and Organisations into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Clubs and Organisations

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'029' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
where
	a.SupporterStatusCode in (
							'5', -- CHILDRENS  ORGANISATIONS
							'N'  -- CLUBS & ORGANISATIONS
							)


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Corporate Donations into Supporter_Portfolio_Supporters Table _Transactions'
set @StageOrderId = @StageOrderId+1

begin try


/*
select count (*)						-- 88470
	, count (distinct supporternumber)	-- 28242
from [Transaction_Table]
where 	[TransactionDonationType] = 'CORP'


 Select		count (distinct contactid)
			From 
						[dbo].[Staging_RE_Constit_Solicitors] as a
			LEFT JOIN
						[dbo].[Staging_RE_Contacts] as b
					On 
						a.[CONSTIT_ID] = b.[Constit_ID]		
where 	
	[Solicitor_type] in (15637) -- isn't any of these so we have discrepancy on codes used 

	
 Select		count (distinct contactid)
			From 
						[dbo].[Staging_RE_Constit_Solicitors] as a
			LEFT JOIN
						[dbo].[Staging_RE_Contacts] as b
					On 
						a.[CONSTIT_ID] = b.[Constit_ID]		
where 	
	[Solicitor_type] in (15638)

	
 Select		count (distinct contactid)
			From 
						[dbo].[Staging_RE_Constit_Solicitors] as a
			LEFT JOIN
						[dbo].[Staging_RE_Contacts] as b
					On 
						a.[CONSTIT_ID] = b.[Constit_ID]		
where 	
	[Solicitor_type] in (15640,18442 , 20548)
and 
contactid = 9199

--	15637, 15638, 15640, 15641, 18442, 18447, 18449, 20548)			-- 8992


select count (*)
	, count (distinct contactid)
 from 	[SCV_Supporters]
where [SupporterStatusCode] =  '9'						-- 42037


-- so total is select 42037 + 8992 + 28242				-- 79271 in total 

select count (*) from  [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
where SegCode = '030'			-- 62253		-- need to see if these counts agree ?
and contactid = 9199


with temp as 
(
select contactid-- 28242
from [Transaction_Table]		as t	
	inner join 
[dbo].[Staging_Supporters]		as sup		on sup.supporternumber = t.supporternumber
where 	[TransactionDonationType] = 'CORP'


union

 Select		contactid
			From 
						[dbo].[Staging_RE_Constit_Solicitors] as a
			LEFT JOIN
						[dbo].[Staging_RE_Contacts] as b
					On 
						a.[CONSTIT_ID] = b.[Constit_ID]		
where 	
	[Solicitor_type] in (15637, 15638, 15640, 15641, 18442, 18447, 18449, 20548)			-- 8992

	union

select  contactid
 from [SCV_Supporters]
where [SupporterStatusCode] =  '9'						-- 42037

) 

select * into corptest
from temp



select count (*) from corptest		as ct
	left join
	(select distinct contactid from [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
					where segcode = '030')			as x			on x.contactid =x.contactid
where x.contactid is null

-- this is 0, so i don't think i am missing any?

*/


-- Corporate Donations ----------------------------- 0w3nG4rr1ty 3.0 Reference for my updates
/** Had to get the solicitor type so I made a join from the constit solicitors and then join up to the supporter level **/ 
/*
insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
Select distinct
	d.contactid,
	'030' SegCode
	-- select count (*) 
From 
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] d
LEFT JOIN
			-- Second Join
			(Select c.[ContactId],
					z.[Solicitor_type],
					c.[TransactionDonationType]
			From
	(select distinct contactid 
			,	[TransactionDonationType]
				from [dbo].[Transaction_Table]	as t
					inner join 
				[dbo].[Staging_Supporters]		as ss
							on ss.supporternumber = t.supporternumber
		) 
				as  c						-- SJBfix_20181010
			LEFT JOIN
					-- First Join
		(	Select b.[ContactId],
					   a.[Solicitor_type]
			From 
						[dbo].[Staging_RE_Constit_Solicitors] as a
			LEFT JOIN
						[dbo].[Staging_RE_Contacts] as b
					On 
						a.[CONSTIT_ID] = b.[Constit_ID]		) as z
							On c.[ContactId] = z.[ContactId]) as y
							On d.ContactId = y.[ContactId]
			left join 
	  ( Select distinct contactid 
		from [dbo].[Supporter_Portfolio_Supporters]
		where SegCode = '030'	)			as qc			on qc.contactid = d.contactid
Where (
	y.[TransactionDonationType] = 'CORP'
OR
	d.[SupporterStatusCode] =  '9'
OR
	y.[Solicitor_type] in (15637, 15638, 15640, 15641, 18442, 18447, 18449, 20548))
and
qc.contactid is null
--and 
--d.contactid = 9199



select segcode, count (*)
 from [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
where SegCode in ( '030','010')
group by segcode

select segcode, count (*)
from [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
where SegCode in ( '030','010')
and contactid = 9199
group by segcode

*/

-- just going to split it out again

-- query 1




insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
Select distinct
	d.contactid,
	'030' SegCode
	-- select count (*) 
From 
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] as d
	inner join 
	(
	select contactid-- 28242
	, [TransactionDonationType]
from [NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table]		as t	
	inner join 
[dbo].[Staging_Supporters]		as sup		on sup.supporternumber = t.supporternumber
	)			as x			
							on x.[contactid] = d.[contactid]
	left join 
( Select distinct contactid 
		from [dbo].[Supporter_Portfolio_Supporters]
		where SegCode = '030'	)			as qc			on qc.contactid = d.contactid
where 	
[TransactionDonationType] = 'CORP'
and 
qc.contactid is null


;

-- query 2

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
Select distinct
	d.contactid,
	'030' SegCode
	-- select count (*) 
From 
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] as d
	inner join 
(
 Select	distinct contactid
			From 
						[dbo].[Staging_RE_Constit_Solicitors] as a
			LEFT JOIN
						[dbo].[Staging_RE_Contacts] as b
					On 
						a.[CONSTIT_ID] = b.[Constit_ID]		
where 	
	[Solicitor_type] in (15637, 15638, 15640, 15641, 18442, 18447, 18449, 20548)
	)			as t		
					on t.contactid = d.contactid
		left join 
( Select distinct contactid 
		from [dbo].[Supporter_Portfolio_Supporters]
		where SegCode = '030'	)			as qc			on qc.contactid = d.contactid
where 	

qc.contactid is null



-- query 3 -- 

;

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
Select distinct
	d.contactid,
	'030' SegCode
	-- select count (*) 
From 
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] as d
	inner join 
	(
select  contactid
 from [SCV_Supporters]
where [SupporterStatusCode] =  '9'
)		as  x	on x.contactid = d.contactid
left join 
( Select distinct contactid 
		from [dbo].[Supporter_Portfolio_Supporters]
		where SegCode = '030'	)			as qc			on qc.contactid = d.contactid
where 	
qc.contactid is null
				

;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Corporate Donations into Supporter_Portfolio_Supporters Table - RE'
set @StageOrderId = @StageOrderId+1

begin try




insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'030' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] s
on
	a.contactid = s.ContactId
and
	s.SegCode = '030'
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.Solicitor_type in 
							(
							15637,
							15638,
							15640,
							15641,
							18442,
							18447,
							18449
							)
	)		
and
	s.ContactId is null



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Active Value Exchange Purchasers into Supporter_Portfolio_Supporters Table _Transactions'
set @StageOrderId = @StageOrderId+1

begin try


-- Value Exchange Purchasers ------------------------------------------------ 0w3nG4rr1ty 5.0 Reference for my updates
/** Value Exchange    **/ 

-- Value Exchange

-- Description
insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
Select Distinct
	d.[ContactId],'055' SegCode
From 	
	[dbo].[SCV_Supporters] d
INNER JOIN
			-- First Join
			(Select 
				max(a.[TransactionDate]) as MaxDate, b.[ContactId]
			From 
				[dbo].[Transaction_Table] as  a 
			LEFT JOIN
				[dbo].[Staging_Supporters] as b
			On 
				b.[SupporterNumber] = a.[Supporternumber]
			Where
				a.[TransactionDonationType] in ('VALX')
			Group by
				b.[ContactId]) as c
		
				
On 
	d.[ContactId] = c.[ContactId]





insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

set @Stage = 'Active Little Stars into Supporter_Portfolio_Supporters Table _Transactions'
set @StageOrderId = @StageOrderId+1

begin try


-- Little Stars Purchasers ------------------------------------------------------------ 0w3nG4rr1ty 6.0 Reference for my updates
/** Creating this based of a Seg List    **/ 

-- Description
insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
Select Distinct
	d.[ContactId],'056' SegCode
From 	
	[dbo].[SCV_Supporters] d
INNER JOIN
			-- First Join
			(Select 
				max(a.[TransactionDate]) as MaxDate, b.[ContactId]
			From 
				[dbo].[Transaction_Table] as  a 
			LEFT JOIN
				[dbo].[Staging_Supporters] as b
			On 
				b.[SupporterNumber] = a.[Supporternumber]
			Where
				a.[TransactionDonationType] in ('STAR')
			Group by
				b.[ContactId]) as c
on 
	d.[ContactId] = c.[ContactId]





insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Local Authorities into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Local Authorities

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'031' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
where
	a.SupporterStatusCode in (
							'F', -- EDUCATION AUTHORITY
							'K'  -- LOCAL AUTHORITY
							)


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Community Donations into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Community Donations

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'032' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] c
on
	a.contactid = c.Contactid
where
	c.TransactionDonationType = 'COMM'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert NSPCC Credit Card Holders into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


/*
-- Volunteers

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'033' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_CommitteeOfficials_Table] c
on
		a.contactid = c.Contactid
where
	a.SupporterStatusCode in (
							'D',  -- DISTRICT COMMITTEE
							'E',  -- BRANCH COMMITTEE
							'G'   -- COMMUNITY FR VOLUNTEER
							)
or
	isnull(c.OfficialCode,'') <> ''





*/
-- NSPCC CREDIT CARD HOLDERS

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'034' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
where
	a.ListSource1 in
				(
				'HBOS', 'MC02', 'MC05', 'MC06'
				)		
or
	Substring(a.MailingIndicators1_99,49,1) = 'Y'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Non Donating/Campaigning Unknowns into Supporter_Portfolio_Supporters Table - No Campaign'
set @StageOrderId = @StageOrderId+1

begin try



--  Non Donating/Campaigning Unknowns		

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'035' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] b
on
	a.ContactId = b.ContactId
where 
	not exists
		(
		select
			1
		from
			[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Campaigner_Actions] c
		where
			a.ContactId = c.ContactID
		)
and
	not exists
		(
		select
			1
		from
			[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] t
		where
			a.ContactId = t.ContactID
		)

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Non Donating/Campaigning Unknowns into Supporter_Portfolio_Supporters Table - In Other Segment'
set @StageOrderId = @StageOrderId+1

begin try		

delete from 
	a
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
where 
	segcode = '035' 
and exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]	b
	where
		a.ContactId = b.ContactId
	and
		b.SegCode in
					(
					'001','002','003','004','005',
					'006','007','008','009','010',
					'011','012','013','014','005',
					'016','017','018','019','020',
					'021','022','023','024','025',
					'026','027','028','029','030',
					'031','032','033','034'
					)
	)



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Email Engagers into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



--email engagers

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'051' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[EmailResponse] c
	where
		a.contactid = c.ContactID
	and
		c.MessageType in ('Open','Click')
	)		


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Set Actions and Values value to 0 in Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/

--Associated Values -- 0w3nG4rr1ty including additional values for Value Exchange and Little Stars


--set all values to 0

Update
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
set
	NumberofActions = 0,
	FirstValue = 0,
	LastValue = 0,
	TotalValue = 0

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Creation Date to Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- creation date
update
	a
set
	CreatedDate = b.FormattedCreationDateYYYYMMDD
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] b
on
	a.ContactID = b.ContactID
where 
a.ContactID is not null


;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Creation Date for Regular Givers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- use first subscription date for reguar givers



update
	a
set
	CreatedDate = b.FormattedCreationDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactId,
		min(FormattedCreationDate) FormattedCreationDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table] 
	group by
		ContactID
	) b
on
	a.ContactID = b.ContactID
where
	a.SegCode in (
				'001'--, -- Active Regular Giver
--				'002'  -- Inactive Regular Giver
				)
;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch



set @Stage = 'Update Dates for Regular Givers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Active/Inactive Regular Giver

update
	a
set

	a.FirstDate = b.FirstDate,
	a.LastDate = b.LastDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactID,

		Min(FormattedFirstPaymentDate) FirstDate,
		Max(FormattedLastPaymentDate) LastDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table]
	group by
		ContactID
	) b
on
	a.ContactId = b.ContactID
where
	a.SegCode in ('001','002')


	;

	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Actions for Active Regular Givers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

/*
update
	a
set

	a.FirstDate = b.FirstDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactID,

		Min(FormattedFirstPaymentDate) FirstDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table]
	where
		ActivityStatusFlag = 'A'
	group by
		ContactID
	) b
on
	a.ContactId = b.ContactID
where
	a.SegCode in ('001','002')
*/



update
	a
set
	NumberofActions = b.cn
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		h.ContactID,
		Count(*) cn
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table] h
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Appeal_Codes_Table] m
	on
		h.AppealCode = m.AppealCode
	where
		(
			(
				h.FormattedCreationDate > '10 Sep 2004'
			and
				m.AppealCodeAsk like 'up%'
			)
		or
			h.FormattedCreationDate <= '10 Sep 2004'
		)
		and
			h.SubscriptionSequenceNo >1
	group by
		ContactID
	) b
on
	a.ContactId = b.ContactID
where
	a.SegCode in ('001'/*,'002'*/)


	;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Actions for Lapsed Regular Givers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try




update
	a
set
	NumberofActions = b.cn
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		h.ContactID,
		Count(*) cn
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table] h
/*	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Appeal_Codes_Table] m
	on
		h.AppealCode = m.AppealCode
	where
		m.AppealCodeAsk like 're%'*/
	group by
		ContactID
	) b
on
	a.ContactId = b.ContactID
where
	a.SegCode in ('002')





insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

--------------------------------------------------- 0w3nG4rr1ty
set @Stage = 'Update Actions for Value Exchange Supporters on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Value Exchange 
update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '055'
and
	b.TransactionDonationType = 'VALX'






insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Value Exchange Purchasers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



;
update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '055'
and
	b.TransactionDonationType = 'VALX'

	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


--------------------------------------------------- 0w3nG4rr1ty
set @Stage = 'Update Actions for Little Stars Supporters on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Little Stars
update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '056'
and
	b.TransactionDonationType = 'STAR'



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Little Stars Purchasers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


;

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '056'
and
	b.TransactionDonationType = 'STAR'




	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


-------------------
set @Stage = 'Update First Values for Regular Givers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try
;
update
	a
set
	a.FirstValue = b.AnnualValueofSubscription
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table] b
on
	a.ContactId = b.ContactID
where
	b.RowNumberCreation = 1
and
	a.SegCode in ('001','002')

;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Values for Regular Givers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try




;
update
	a
set
	a.LastValue = b.AnnualValueofSubscription
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactID,
		AnnualValueofSubscription,
		ROW_NUMBER () over (partition by ContactID order by creationdate desc) rown
	from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_Subscriptions_Table] 
	) b
on
	a.ContactId = b.ContactID
					
where
	b.rown = 1
and
	a.SegCode in ('001','002')


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

---------------------------------------------------------

set @Stage = 'Update Total Value for Regular Givers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



;
update
	a
set
	a.TotalValue = b.TotalValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
		(
		Select
			ContactId,
			sum(TotalValue) TotalValue
		from
			[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] 
		where
			TransactionDonationType in
									(
								'Reg'
								)
		Group by
			ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode in ('001','002')



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch




set @Stage = 'Update First Date and Value for Cash on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Cash



update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		FormattedTransactionDate,
		Receipt_DonationValue,
		row_number () over (partition by ContactId order by FormattedTransactionDate) RowNum
	from
		[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] 
	where
		TransactionDonationType in
								(
								'CASH', 'LOTD'
								)
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '003'
and 
	b.RowNum = 1




	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Total Value and Actions for Cash on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
		(
		Select
			ContactId,
			sum(TotalValue) TotalValue,
			sum(RowNumber) RowNumber
		from
			[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] 
		where
			TransactionDonationType in
									(
								'CASH', 'LOTD'
								)
		Group by
			ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '003'



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date and Value for Cash on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try




update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		FormattedTransactionDate,
		Receipt_DonationValue,
		row_number () over (partition by ContactId order by FormattedTransactionDate desc) RowNum
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] 
	where
		TransactionDonationType in
								(
								'CASH', 'LOTD'
								)
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '003'
and 
	b.RowNum = 1


	;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Text to Give on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



-- Text to give only 

update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
		[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '004'
and
	b.TransactionDonationType in
								(
								'SMS'
								)


;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Total Value and Actions for Text to Give on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
		[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '004'
and
	b.TransactionDonationType in
								(
							'SMS'
							)

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date and Value for Text to Give on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction]  b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '004'
and 
	b.TransactionDonationType in
								(
								'SMS'
								)




insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Total Value for Payroll Giving on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



-- Active/Inactive Payroll Giver




update
	a
set
	a.TotalValue = b.TotalValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactId,
		sum(cast(amount as numeric(18,2))) TotalValue
	from
		[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table] 
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode in ('005','006')



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date for Payroll Giving on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



update
	a
set
	a.FirstDate = b.FirstDate 
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		Min(FormattedStartDate) FirstDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table]
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactID
where
	a.SegCode in ('005','006')

	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

----------------------------------------------------------------


set @Stage = 'Update Last Date for ACtive Payroll Giving on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
set
	LastDate = GETDATE()
where
	SegCode in ('005')




	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date for Inactive Payroll Giving on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.LastDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		Min(FormattedLastPayrollPaymentDate) LastDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table]
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactID
where
	a.SegCode in ('006')


	;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Values for Payroll Giving on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.FirstValue = b.Amount*case 
								when
									Frequency in ('C','M','1','L')
										then
											12
								when
									Frequency in ('W','5')
										then
											52
								when
									Frequency in ('F')
										then
											26
								when
									Frequency in ('O','A')
										then
											1
								else
											1
							end	
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		cast(Amount as numeric(18,2)) Amount,
		Frequency,
		ROW_NUMBER() over (partition by contactid order by FormattedStartDate) Rown
	from
		[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table]
	) b
on
	a.ContactId = b.ContactID
where
	b.Rown = 1
and
	a.SegCode in ('005','006')


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Values for Payroll Giving on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastValue = b.Amount*case 
								when
									Frequency in ('C','M','1','L')
										then
											12
								when
									Frequency in ('W','5')
										then
											52
								when
									Frequency in ('F')
										then
											26
								when
									Frequency in ('O','A')
										then
											1
								else
											1
							end	
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		cast(Amount as numeric(18,2)) Amount,
		Frequency,
		ROW_NUMBER() over (partition by contactid order by FormattedStartDate desc) Rown
	from
		[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_PayrollGiving_Table]
	) b
on
	a.ContactId = b.ContactID
where
	b.Rown = 1
and
	a.SegCode in ('005','006')


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Legacy Enquirer on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Legacy Enquirer



update
	a
set
	FirstDate = b.FirstDate,
	LastDate = b.LastDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactId,
		Min(CreationDateLegacy) FirstDate,
		Max(FormattedLifecycleUpdateDate) LastDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table] 
	where
		LegacyLifecycleStage = 3
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactID
where
	a.SegCode = '007'



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Legacy Intender on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try
-- Legacy Intender



update
	a
set
	FirstDate = b.FirstDate,
	LastDate = b.LastDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactId,
		Min(CreationDateLegacy) FirstDate,
		Max(FormattedLifecycleUpdateDate) LastDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table] 
	where
		LegacyLifecycleStage = 4
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '008'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Legacy Pledger into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Legacy Pledger



update
	a
set
	FirstDate = b.FirstDate,
	LastDate = b.LastDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactId,
		Min(CreationDateLegacy) FirstDate,
		Max(FormattedLifecycleUpdateDate) LastDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Legacy_Table] 
	where
		LegacyLifecycleStage = 5
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '009'


;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Tribute Fund Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


/*
-- Tribute Fund Donations
---- 0w3nG4rr1ty Tribute {4}
---- Ol1V14Tr4n 20181018 to get the procedure to NOT bring it from the First Transaction Talble.
---- BL4d3Y 20181030 -- the below was what was causing problems so i
	1) split the queries up 
	2) added into a cte 
	3) inserted the relvnt recordsinto 2 x tables TRibuteFix_EARLIEST/TRibuteFix_LATEST,
			 NB - these 2 tbls  have a UNIQUE IDX on, so adding these orders by date asc or desc
				- means only 1 x contactid goes in which is the 1st & last
				
	*/

truncate table TRibuteFix_EARLIEST
 
 ;

	with tribute as 
	(

			select	--top 0 
				e.ContactId,
				c.Supporternumber,
				transactiondate,
				Receipt_DonationValue,
				transactiondonationtype,
				[N£CMSD],
				1 as rown 
			 
			from
			[NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] c
						INNER JOIN
			[NSPCC_AS400Master]..[N£CM_Committee_Code_MASTER] as d
			On
			c.LinkforCommittee = d.[N£CMCD]
						INNER JOIN
			[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] e
														on c.Supporternumber = e.Supporternumber
			-- This is so we can bring back the join for the FastStats URN
			where (c.TransactionDonationType = 'TRIB')
				 
			and 
			 c.Supporternumber is not null
			 and 
			 LinkforCommittee is not null						-- took 2 mins 
			 
			 
UNION ALL
			--- Insert into TRibuteFix_SJB
			select	--top 0 
				e.ContactId,
				c.Supporternumber,
				transactiondate,
				Receipt_DonationValue,
				transactiondonationtype,
				[N£CMSD],
				1 as rown
			
			from
			[NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] c
						INNER JOIN
			[NSPCC_AS400Master]..[N£CM_Committee_Code_MASTER] as d
			On
			c.LinkforCommittee = d.[N£CMCD]
						INNER JOIN
			[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] e
														on c.Supporternumber = e.Supporternumber
			 
			where 
			[N£CMSD] = 'TRIBUTE'
			and 
			c.Supporternumber is not null
			and 
			LinkforCommittee is not null					-- try this, but will it add dupes?


)
insert into TRibuteFix_EARLIEST
select	--top 0 
				ContactId,
				Supporternumber,
				transactiondate,
				Receipt_DonationValue,
				transactiondonationtype,
				[N£CMSD]	,
				rown	
from tribute
order by transactiondate asc

;

	
update
	a
set
		a.FirstDate = trib.transactiondate,
		a.FirstValue = trib.Receipt_DonationValue
		-- select count (*) 
from

[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] as a
	inner join
TRibuteFix_EARLIEST				as trib			on trib.contactid  = a.contactid
where 
segcode = '010'			-- 3498 - works fine!


;


truncate table TributeFix_LATEST

	;

with tributelastest as 
	(

			select	--top 0 
				e.ContactId,
				c.Supporternumber,
				transactiondate,
				Receipt_DonationValue,
				transactiondonationtype,
				[N£CMSD],
				1 as rown 
				--,
				--ROW_NUMBER () over (partition by c.supporternumber order by transactiondate asc) rown		--	into TRibuteFix_SJB
				-- This is so that we can order the lines to be able to pick the first one later
				-- select count (*)
			from
			[NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] c
						INNER JOIN
			[NSPCC_AS400Master]..[N£CM_Committee_Code_MASTER] as d
			On
			c.LinkforCommittee = d.[N£CMCD]
						INNER JOIN
			[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] e
														on c.Supporternumber = e.Supporternumber
			-- This is so we can bring back the join for the FastStats URN
			where (c.TransactionDonationType = 'TRIB')
					--Or
					--[N£CMSD] = 'TRIBUTE')
			and 
			 c.Supporternumber is not null
			 and 
			 LinkforCommittee is not null						-- took 2 mins 
			 
			 
UNION ALL
			--- Insert into TRibuteFix_SJB
			select	--top 0 
				e.ContactId,
				c.Supporternumber,
				transactiondate,
				Receipt_DonationValue,
				transactiondonationtype,
				[N£CMSD],
				1 as rown
				-- ,
					from
			[NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] c
						INNER JOIN
			[NSPCC_AS400Master]..[N£CM_Committee_Code_MASTER] as d
			On
			c.LinkforCommittee = d.[N£CMCD]
						INNER JOIN
			[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] e
														on c.Supporternumber = e.Supporternumber
			-- This is so we can bring back the join for the FastStats URN
			where 
			[N£CMSD] = 'TRIBUTE'
			and 
			c.Supporternumber is not null
			and 
			LinkforCommittee is not null					-- try this, but will it add dupes?


)
insert into TRibuteFix_LATEST
select	--top 0 
				ContactId,
				Supporternumber,
				transactiondate,
				Receipt_DonationValue,
				transactiondonationtype,
				[N£CMSD]	,
				rown	
from tributelastest
order by transactiondate desc
	 


		
	
update
	a
set
		a.LastDate = trib.transactiondate,
		a.lastValue = trib.Receipt_DonationValue
		-- select count (*) 
from

[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] as a
	inner join
TRibuteFix_LATEST				as trib			on trib.contactid  = a.contactid
where 
segcode = '010'			-- 3498 - works fine!
	;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date and  Value for Tribute Fund Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1



------------------ Ol1v14Tr4n 20181018 Changed this to run like the "First date" procedure for tributes.

begin try

 
  
------- Ol1V14Tr4n 20181018 -- I have inserted in another bit here to add in the total values and actions here.

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Total Value and Actions Tribute Fund Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1


begin try




-- bl4d3y -- the below is using the NEW tbl created in above fix -- 
;


update
	a
set

	--b.ContactId,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
	from 
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a

	INNER JOIN
	(
	select 
				e.ContactId,
				c.Supporternumber,
				SUM(c.Receipt_DonationValue) as TotalValue,
				Count(*) as RowNumber

			from

			[NSPCC_Supporter_Portfolio].[dbo].[Transaction_Table] as c
						INNER JOIN
			[dbo].[TRibuteFix_LATEST]		as [tributers]				on tributers.supporternumber = c.supporternumber
						INNER JOIN
			[NSPCC_Supporter_Portfolio].[dbo].[Staging_Supporters] e
			on c.Supporternumber = e.Supporternumber
			-- This is so we can bring back the join for the FastStats URN
			 
			group by e.ContactId, c.Supporternumber

			) b			on a.ContactId = b.ContactId
where  a.segcode = '010'
			--and a.ContactId = 1079789 -- This is a test supporter number



			;
--------------------------------------------------------



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Tribute Fund Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try
-- Tribute Fund Donations tbd

update
	a
set
	a.FirstDate = a.CreatedDate,
	a.LastDate = a.CreatedDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
where
	a.SegCode = '011'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for In Memory Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

--In Memory Donations


update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '012'
and
	b.TransactionDonationType = 'IMO'



	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for In Memory Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '012'
and
	b.TransactionDonationType = 'IMO'


;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Funeral Directors and schools on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Funeral Directors and schools



update
	a
set
	a.FirstDate = a.CreatedDate,
	a.LastDate = CreatedDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a

where
	a.SegCode in ('013', '014')
	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Raffle Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


--Raffle Donations


update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '015'
and
	b.TransactionDonationType = 'RAFD'



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Raffle Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '015'
and
	b.TransactionDonationType = 'RAFD'



	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Raffle Purchaser on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try





--Raffle Purchaser


update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '016'
and
	b.TransactionDonationType = 'RAFS'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Raffle Purchaser on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '016'
and
	b.TransactionDonationType = 'RAFS'

	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Actions for Active Lottery on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

--  active lottery
update
	a
set
	a.NumberofActions = b.Number_Of_Lottery_Lines
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		contactid,
		sum(Number_Of_Lottery_Lines) Number_Of_Lottery_Lines
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]
	where
		Lottery_Player_Status_Active_Inactive in ('A','P') 
	group by
		contactid
	)b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '017'

	;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Lottery on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


update
	a
set
	a.FirstValue = b.FirstValue,
	a.FirstDate = b.FiirstDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		contactid,
		Monthly_Payment_Value*12 FirstValue,
		FormattedFirst_Lottery_Play_Date FiirstDate,
		ROW_NUMBER() over (partition by contactid order by FormattedFirst_Lottery_Play_Date) rown
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]
--	where
--		Lottery_Player_Status_Active_Inactive in ('A','P') 
	)b
on
	a.ContactId = b.ContactId
where
	a.SegCode in ('017','018')
and
	rown = 1



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Values for Lottery on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try




update
	a
set
	a.LastValue = b.LastValue
--	,a.TotalValue = b.LastValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		contactid,
		Monthly_Payment_Value*12 LastValue,
		ROW_NUMBER() over (partition by contactid order by FormattedFirst_Lottery_Play_Date desc) rown
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]
--	where
--		Lottery_Player_Status_Active_Inactive in ('A','P') 
	)b
on
	a.ContactId = b.ContactId
where
	a.SegCode in ('017','018')
and
	rown = 1




	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date for Lottery on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



update
	a
set
	a.LastDate = b.FormattedLast_Lottery_Play_Date
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		contactid,
		max(FormattedLast_Lottery_Play_Date) FormattedLast_Lottery_Play_Date
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]
--	where
--		Lottery_Player_Status_Active_Inactive in ('A','P') 
	group by
		ContactId
	)b
on
	a.ContactId = b.ContactId
where
	a.SegCode in ('017','018')



	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Actions for Inactive lottery on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

--  inactive lottery
update
	a
set
	a.NumberofActions = b.Number_Of_Lottery_Lines
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		contactid,
		sum(Number_Of_Lottery_Lines) Number_Of_Lottery_Lines
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]
--	where
--		Lottery_Player_Status_Active_Inactive in ('I') 
	group by
		contactid
	)b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '018'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Total Value for Lottery on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.TotalValue = b.TotalValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode in ('017','018')
and
	b.TransactionDonationType = 'LOTS'



;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, and Actions for Campaigner Actions on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

/*

update
	a
set
	a.FirstValue = b.FirstValue,
	a.FirstDate = b.FiirstDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		contactid,
		Monthly_Payment_Value*12 FirstValue,
		FormattedFirst_Lottery_Play_Date FiirstDate,
		ROW_NUMBER() over (partition by contactid order by FormattedFirst_Lottery_Play_Date) rown
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]
	where
		Lottery_Player_Status_Active_Inactive in ('I') 
	)b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '018'
and
	rown = 1



update
	a
set
	a.LastDate = b.LastValue
	,a.TotalValue = b.LastValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		contactid,
		Monthly_Payment_Value*12 LastValue,
		ROW_NUMBER() over (partition by contactid order by FormattedFirst_Lottery_Play_Date desc) rown
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]
	where
		Lottery_Player_Status_Active_Inactive in ('I') 
	)b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '018'
and
	rown = 1





update
	a
set
	a.LastDate = b.FormattedLast_Lottery_Play_Date
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		contactid,
		max(FormattedLast_Lottery_Play_Date) FormattedLast_Lottery_Play_Date
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_WeeklyLottery_Table]
	where
		Lottery_Player_Status_Active_Inactive in ('I') 
	group by
		ContactId
	)b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '018'
*/



-- Campaigner Actions


update
	a
set
	a.NumberofActions = b.NumberofActions,
	a.FirstDate = b.FirstDate,
	a.LastDate = b.LastDate 
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactId,
		count(*) NumberofActions,
		Min(FormattedRequestDate) FirstDate,
		Max(FormattedRequestDate) LastDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Campaigner_Actions]
	where
		isnull(ActionCode,'') <> ''
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '019'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Campaigner Actions on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


update
	a
set
	a.FirstDate = case when isnull(a.FirstDate,'31 Dec 2100') < isnull(b.FirstDate,'31 Dec 2100') then a.FirstDate else b.Firstdate end,
	a.LastDate = case when isnull(a.LastDate,'01 Jan 1900') > isnull(b.LastDate,'01 Jan 1900') then a.LastDate else b.LastDate end
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactId,
		Max(FormattedMailingIndicatorChangeDate) LastDate,
		min(FormattedMailingIndicatorChangeDate) FirstDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Mailing_Indicator_Changes_Table]
	where
		MailingIndicatorPosition = 72 -- CDU CAMPAIGNER
	and
		MailingIndicatorSetTo = 'Y'
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '019'



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Christmas Card Donor on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



--Christmas Card Donator


update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '020'
and
	b.TransactionDonationType = 'TRAD'


	;





insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Christmas Card Donor on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '020'
and
	b.TransactionDonationType = 'TRAD'



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Christmas Card Purchaser on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

--Christmas Card Purchaser


update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '021'
and
	b.TransactionDonationType = 'SALE'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Christmas Card Purchaser on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '021'
and
	b.TransactionDonationType = 'SALE'


;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

--------------------------------------------------------------------
--------------------------------------------------------------------



set @Stage = 'Update Dates for LFS Non Player on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

--tbd lfs non players

update
	a
set
	a.LastDate = a.CreatedDate,
	a.FirstDate = a.CreatedDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
where
	a.SegCode = '022'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date for LFS Non Player on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.LastDate

from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		ContactId,
		max(FormattedActivityDate) LastDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Supporter_Activities] 
	where
		ActivityActionCode in ('LFSFAILED','LFSZERO')
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '022'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for LFS Purchasers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- LFS Purchasers
update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '023'
and
	b.TransactionDonationType = 'LFS'

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch
--45h13yL0m4x
--removed number of action updates from this section
set @Stage = 'Update Last Date, Value, Total Value for LFS Purchasers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue
	--a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '023'
and
	b.TransactionDonationType = 'LFS'

	;


		insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch
--45h13yL0m4x
--truncate table for updates to numberOfActions
set @Stage = 'Truncate table LFS_NumberOfActions - NEW'
set @StageOrderId = @StageOrderId+1
begin try
	truncate table [NSPCC_Supporter_Portfolio].[dbo].[LFS_NumberOfActions]
	;

	---------------------
	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch
--45h13yL0m4x
--create table and update to numberOfActions
set @Stage = 'Insert and updates to LFS_NumberOfActions Table - NEW'
set @StageOrderId = @StageOrderId+1
begin try
	
		insert into [NSPCC_Supporter_Portfolio].[dbo].[LFS_NumberOfActions] (contactID,NumberofActions)
			select b.contactID,
	
		count(distinct		case
			when month(a.TransactionDate) <='03' then year(a.TransactionDate) - 1
			when month(a.transactionDate) >='04' then year(a.TransactionDate)
			end)
			from Transaction_Table													as a 
				inner join Staging_Supporters										as b
				on
				 a.Supporternumber = b.SupporterNumber
			where
			 a.TransactionDonationType = 'LFS' 
				group by b.contactID
				order by b.contactid desc
			
	update a
			set a.NumberofActions = b.ActionNumber
			from [LFS_NumberOfActions] a
			inner join (select contactID, max(NumberofActions) as ActionNumber
			from [LFS_NumberOfActions]
			group by contactID) b
			on a.contactID = b.contactID

				;
---------------------------------------------
	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch
--45h13yL0m4x
--updates to Supporter_Portflio_Supporters
set @Stage = 'Update NumberOfActions for LFS Purchasers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1
begin try

	update a
	set
	 a.NumberofActions = x.NumberofActions
	from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
	inner join
	[NSPCC_Supporter_Portfolio].[dbo].LFS_NumberOfActions as x
	on a.contactid = x.contactid
where
	a.SegCode = '023'
and
	b.TransactionDonationType = 'LFS'

	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Product Purchased on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



-- Product Purchased
update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '024'
and
	b.TransactionDonationType = 'PROD'


	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Product Purchased on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '024'
and
	b.TransactionDonationType = 'PROD'



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Event Paid Participants on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Event Paid Participants
update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '025'
and
	b.TransactionDonationType = 'EVNT'



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Event Paid Participants on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '025'
and
	b.TransactionDonationType = 'EVNT'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Sponsorship on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Sponsorship
update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '026'
and
	b.TransactionDonationType = 'SPON'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Sponsorship on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '026'
and
	b.TransactionDonationType = 'SPON'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Trust Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

/*
-- Big Board Game Participants

update
	a
set
	NumberofActions = b.NumberofActions,
	FirstDate = b.FirstDate,
	LastDate = b.LastDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		count(*) NumberofActions,
		min(FormattedActivityDate) FirstDate,
		max(FormattedActivityDate) LastDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Supporter_Activities]
	where
		ActivityCode = 'RBBGD'
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '027'




*/

-- Trust Donations
update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '028'
and
	b.TransactionDonationType = 'TRUS'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Trust Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


;
update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '028'
and
	b.TransactionDonationType = 'TRUS'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Clubs and Organisations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



-- Clubs and Organisations



update
	a
set
	a.FirstDate = CreatedDate,
	a.LastDate = CreatedDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
where
	a.SegCode = '029'




insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Corporate Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try






-- campaigner actions and subscriptions handled later





-- Corporate Donations
update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '030'
and
	b.TransactionDonationType = 'CORP'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Corporate Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '030'
and
	b.TransactionDonationType = 'CORP'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Corporate Donations on Supporter_Portfolio_Supporters Table - RE'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	FirstDate = case when isnull(d.FirstDate,'31 Dec 2100') < isnull(a.FirstDate,'31 Dec 2100') then d.FirstDate else a.FirstDate end,
	LastDate = case when isnull(d.LastDate,'01 Jan 1901') > isnull(a.LastDate,'01 Jan 1901') then d.LastDate else a.LastDate end
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select 
		c.ContactId,
		max(b.DTE) LastDate,
		min(b.DTE) FirstDate 
	from  
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Actions] b
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] c
	on
		b.Records_ID = c.RecordsTableID
	group by
		c.ContactId
	) d
on 
	a.ContactId = d.contactid
where
	a.segcode = '030'

	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Local Authorities on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Local Authorities



update
	a
set
	a.FirstDate = CreatedDate,
	a.LastDate = CreatedDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
where
	a.SegCode = '031'


	;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date and Value for Community Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- Community Donations
update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '032'
and
	b.TransactionDonationType = 'COMM'



	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date, Value, Total Value and Actions for Community Donations on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



;
update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue,
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '032'
and
	b.TransactionDonationType = 'COMM'

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Date for NSPCC Credit Card Holders on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


/*
-- Volunteers



update
	a
set
	a.FirstDate = b.FormattedTransactionDate,
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		FormattedTransactionDate,
		Receipt_DonationValue,
		row_number () over (partition by ContactId order by FormattedTransactionDate) RowNum
	from
		[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] 
	where
		TransactionDonationType in
								(
								'CASH', 'COMM', 'CORP', 'EVNT', 
								'IMO,', 'LEG', 'LFS', 'LOTD', 
								'LOTS', 'NORM', 'PAY', 'PROD', 
								'RAFD', 'RAFS', 'REG', 'SALE', 
								'SPON', 'TAX', 'TRAD', 'TRIB', 
								'TRUS'
								)
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '033'
and 
	b.RowNum = 1






update
	a
set
	a.TotalValue = b.TotalValue,
	a.NumberofActions = b.RowNumber
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
		(
		Select
			ContactId,
			sum(TotalValue) TotalValue,
			sum(RowNumber) RowNumber
		from
			[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] 
		where
			TransactionDonationType in
									(
								'CASH', 'COMM', 'CORP', 'EVNT', 
								'IMO,', 'LEG', 'LFS', 'LOTD', 
								'LOTS', 'NORM', 'PAY', 'PROD', 
								'RAFD', 'RAFS', 'REG', 'SALE', 
								'SPON', 'TAX', 'TRAD', 'TRIB', 
								'TRUS'
									)
		Group by
			ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '033'




update
	a
set
	a.LastDate = b.FormattedTransactionDate,
	a.LastValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		FormattedTransactionDate,
		Receipt_DonationValue,
		row_number () over (partition by ContactId order by FormattedTransactionDate desc) RowNum
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] 
	where
		TransactionDonationType in
								(
								'CASH', 'COMM', 'CORP', 'EVNT', 
								'IMO,', 'LEG', 'LFS', 'LOTD', 
								'LOTS', 'NORM', 'PAY', 'PROD', 
								'RAFD', 'RAFS', 'REG', 'SALE', 
								'SPON', 'TAX', 'TRAD', 'TRIB', 
								'TRUS'
								)
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '033'
and 
	b.RowNum = 1

-- campaigner actions and subscriptions handled later




*/
--NSPCC Credit Card Holders


update
	a
set
	a.FirstDate = a.CreatedDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
where
	a.SegCode = '034'

	;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Date for NSPCC Credit Card Holders on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.LastDate = b.LastDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		max(FormattedMailingIndicatorChangeDate) LastDate
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_Mailing_Indicator_Changes_Table]
	where
		MailingIndicatorPosition = 49 -- MASTERCARD NON DONOR
	and
		MailingIndicatorSetTo = 'Y'
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '034'


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Non Donating Prospects on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try
-- non donating prospects


update
	a
set
	a.LastDate = a.CreatedDate,
	a.FirstDate = a.CreatedDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
where
	a.SegCode = '035'


	;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Values for Email Engagers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- email engagers

update
	a
set
	a.FirstValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		Receipt_DonationValue,
		row_number () over (partition by ContactId order by FormattedTransactionDate) RowNum
	from
		[NSPCC_Supporter_Portfolio].[dbo].[First_Transaction] 
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '051'
and 
	b.RowNum = 1



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Total Value for Email Engagers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try




update
	a
set
	a.TotalValue = b.TotalValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
		(
		Select
			ContactId,
			sum(TotalValue) TotalValue
		from
			[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] 
		Group by
			ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '051'



	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Last Values for Email Engagers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try



update
	a
set
	a.LastValue = b.Receipt_DonationValue
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		Receipt_DonationValue,
		row_number () over (partition by ContactId order by FormattedTransactionDate desc) RowNum
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Last_Sum_Transaction] 

	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '051'
and 
	b.RowNum = 1



	;
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates And Actions for Email Engagers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try




update
	a
set
	FirstDate = r.FirstDate,
	LastDate = r.LastDate,
	NumberofActions = r.NoOfActions
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		min(ClickDate) FirstDate,
		max(Clickdate) LastDate,
		Count(Distinct MessageName) NoOfActions
	from
		[NSPCC_Supporter_Portfolio].[dbo].[EmailResponse] 
	where
		MessageType in ('Open','Click')
	group by
		Contactid
	) r
on
	a.ContactId = r.Contactid	
where
	a.SegCode = '051'

	;


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update First Sent Dates for Email Engagers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- SJBDBLCHECK2018310 -- 


update
	a
set
	EmailFirstSent = r.FirstSent
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		first_value(MessageName) over (partition by Contactid order by DeliveryDate) FirstSent	
	from
		[NSPCC_Supporter_Portfolio].[dbo].[EmailResponse] 
	where
		MessageType in ('Open','Click','sent_campaign')
	) r
on
	a.ContactId = r.Contactid
where
	a.SegCode not in
		(
		'036','037','038','039',
		'040','041','042','043',
		'044','045','048','049',
		'050','053','054'	)


--- 0w3ng4rr1ty Email populations 

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Open Dates for Email Engagers on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try





update
	a
set
	EmailFirstOpen = r.FirstOpen,
	EmailLastOpen = r.LastOpen
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	Select
		ContactId,
		first_value(MessageName) over (partition by Contactid order by DeliveryDate) FirstOpen,
		first_value(MessageName) over (partition by Contactid order by DeliveryDate desc) LastOpen			
	from
		[NSPCC_Supporter_Portfolio].[dbo].[EmailResponse] 
	where
		MessageType in ('Open','Click')
	) r
on
	a.ContactId = r.Contactid
where
	a.SegCode not in
		(
		'036','037','038','039',
		'040','041','042','043',
		'044','045','048','049',
		'050','053','054'
		)
--- 0w3ng4rr1ty Email populations 

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Celebrities into Supporter_Portfolio_Supporters Table - Cons Sol'
set @StageOrderId = @StageOrderId+1

begin try

/*********************************************************************************************************/

-- Insert RE Donors Into Supporter Portfolio

-- Celebrities

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'039' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.Solicitor_type = 10956
	)		

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Celebrities into Supporter_Portfolio_Supporters Table - Cons Codes'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'039' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] c
on
	a.contactid = c.ContactId
and
	c.SegCode = '039'
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.CODE = 2039
	)		
and
	c.ContactId is null



	;

	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Committee Members into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Committee Members

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'036' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.CODE in 
					(
					13780,
					15000,
					17929,
					18972,
					2168,
					2169,
					2572,
					2573,
					3602,
					6419
					)		
		)



insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Community into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Community

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'042' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors] c
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SolicitorType] s
	on
		c.Solicitor_type = s.TABLEENTRIESID
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		s.LONGDESCRIPTION like '%community%'
/*	and
		c.Solicitor_type in 
							(
							10933,
							10935,
							10936,
							10937,
							10940,
							10941,
							10943,
							10946,
							10961,
							15637,
							15638,
							19452
							)
*/
	)		



/*
-- Corporate

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'XXX' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.Solicitor_type in 
							(
							15637,
							15638,
							15640,
							15641,
							18442,
							18447,
							18449
							)
	)		



insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'XXX' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] c
on
	a.contactid = c.ContactId
and
	c.SegCode = 'XXX'
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.CODE in 
				(
				12224,
				13783,
				13784,
				16434,
				16496,
				16561,
				16562,
				16577,
				17007,
				17008,
				17009,
				17010,
				17011,
				17371,
				17372				
				)
	)		
and
	c.ContactId is null
*/

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Event Registration into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Event Registration

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'043' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Participants] c
	where
		a.RecordsTableID = c.RecordsID
	and
		c.Status = 11147
	)		

 insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Major Supporters into Supporter_Portfolio_Supporters Table - Cons Sol'
set @StageOrderId = @StageOrderId+1

begin try


-- Major Supporters

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'037' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors] c
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SolicitorType]  d
	on
		c.Solicitor_type = d.TABLEENTRIESID
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		(
			LONGDESCRIPTION like 'MG%'
		or
			LONGDESCRIPTION like '%major giving%'
		)
/*		c.Solicitor_type in 
							(
							10944,
							10945,
							14188,
							16425,
							19814
							)
*/
	)		


	;

	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Major Supporters into Supporter_Portfolio_Supporters Table - Cons Codes'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'037' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] c
on
	a.contactid = c.ContactId
and
	c.SegCode = '037'
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.CODE in 
				(
				15919,
				2036
				)
	)		
and
	c.ContactId is null


	;

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert NSPCC Family Member into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- NSPCC Family Member

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'038' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.CODE = 13778	
		)


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert NSPCC Trustee or Council Member into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- NSPCC Trustee or Council Member

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'040' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.CODE in 
					(
					2013,
					4143	
					)
		)


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Partnership into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try
-- Partnership

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'041' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors] c
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SolicitorType] s
	on
		c.Solicitor_type = s.TABLEENTRIESID
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		s.LONGDESCRIPTION like '%partnership%'
/*	and
		c.Solicitor_type in 
							(
							10928,
							10930,
							10932,
							10956,
							18442,
							19813
							)
*/
	)		



/*
-- RE Archived

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'052' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.CODE = 6746	
		)
		*/

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Special Event Partcipation into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- special Event Partcipation 

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'048' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Participants] c
	inner join 
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_TABLEENTRIES] d
	on
		c.Participation = d.TABLEENTRIESID
	where
		a.RecordsTableID = c.RecordsID
	and
		d.CODETABLESID = 38
	and
		d.LONGDESCRIPTION like 'SE%'
/*	and
		c.Participation in
							(
							19680,
							19681,
							19831,
							2288,
							2289,
							2291,
							2297,
							3875,
							3876,
							7049
							)
*/
	)		

 
 insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Special Event Auction Donors into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Special Event Auction Donors

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'045' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Actions] c
	where
		a.RecordsTableID = c.Records_ID
	and
		c.Type = 11816
	and
		c.Status in
							(
							12981,
							12982,
							12983,
							1519
							)
	)		

 
 insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Special Event Givers Organisers into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- Special Event Givers Organisers

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'049' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors] c
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		c.Solicitor_type = 10932
	)		


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Sporting Event Participants into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

-- sporting Event Participants

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'044' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Participants] c
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SPECIAL_EVENT] d
	on
		c.EventID = d.id
	where
		a.RecordsTableID = c.RecordsID
	and
		c.Status = 11147
	and
		d.Category = 1
	)		


	;

 insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Volunteer Board Members into Supporter_Portfolio_Supporters Table - Cons Sol'
set @StageOrderId = @StageOrderId+1

begin try

-- Volunteer Board Members

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'053' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors] c
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SolicitorType] d
	on
		c.Solicitor_type = d.TABLEENTRIESID
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		d.LONGDESCRIPTION like '%VP%'
/*		
	and
		c.Solicitor_type = 10930
*/
	)		

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Volunteer Board Members into Supporter_Portfolio_Supporters Table - Cons Codes'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'053' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] c
on
	a.contactid = c.ContactId
and
	c.SegCode = '053'
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] c
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_ConstituentCode] d
	on
		c.CODE = d.TABLEENTRIESID
	where
		a.Constit_ID = c.CONSTIT_ID
	and
		d.LONGDESCRIPTION like '%voulnteer%'
/*		c.CODE in 
				(
				13779,
				14999,
				17487
				)
*/
	)		
and
	c.ContactId is null

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

---------------------------------------------------------------------------------------------------------------------

--- 0w3nG4rr1ty 06-02-2019 06022019 06/02/2019, As of NSPCC Ticket 292 - Change to Non Sporting Mass Participation Events segment
---------------------------------------------------------------------------------------------------------------------

set @Stage = 'Insert Non Sporting Mass Particpation Events into Supporter_Portfolio_Supporters Table - Supp Act'
set @StageOrderId = @StageOrderId+1

begin try

-- Non Sporting Mass Particpation Events
insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'050' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Supporter_Activities] a
where
	a.ActivityCode like 'NP%' -- OG 06/02/2019 

/**  OLD PRE 04/02/2019 
	a.ActivityCode in ('RBBGD' ,'PLAY' ,'HACK','OWN EVENT','STEP' ,'GG4H' ,'GHERKIN')
or
	a.ActivityCode like 'NONS%'

**/

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Insert Non Sporting Mass Particpation Events into Supporter_Portfolio_Supporters Table - Partic'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'050' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Participants] b
on
	a.RecordsTableID = b.RecordsID
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SPECIAL_EVENT] c
on
	b.EventID = c.ID
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] d
on
	a.ContactId = d.ContactId
and
	d.SegCode = '050'
where
	d.ContactId is null
and 
	C.CATEGORY not in (2,3)  -- OG 04/02/2019 
and
	C.TypeID in (18290)  -- OG 04/02/2019 

/** Pre 04/02/2019 

and
	c.CATEGORY = 4
and
	c.TypeID not in (16429,8403)

**/


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch

/** Removed as it is duplicating the work above, need to discuss with Simon Blade! 

set @Stage = 'Insert Non Sporting Mass Particpation Events into Supporter_Portfolio_Supporters Table - Spec Event'
set @StageOrderId = @StageOrderId+1

begin try

insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'050' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Participants] b
on
	a.RecordsTableID = b.RecordsID
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SPECIAL_EVENT] c
on
	b.EventID = c.ID
left outer join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] d
on
	a.ContactId = d.ContactId
and
	d.SegCode = '050'
where
	d.ContactId is null
and
	c.TypeID = 18290

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try

---------------------------------------------------------------------------------------------------------------------
---- 0w3nG4rr1ty 06022019 06/02/2019 06-02-2019 Above for Non Sporting Mass Participation Events  ^^^^^^^^^^^^^^^^^^^
---------------------------------------------------------------------------------------------------------------------

begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


**/

set @Stage = 'Insert RE Catch All into Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


-- RE catch all
insert into [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
	(
	ContactId,
	SegCode
	)
select distinct
	a.contactid,
	'054' SegCode
from
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
	
where exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] b
	where
		b.code in ('6955', '6746')
	and
		a.Constit_ID = b.CONSTIT_ID
	)
and
	not exists
	(
	select
		1
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Constit_Solicitors] c
	where
		a.Constit_ID = c.CONSTIT_ID
	)

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Delete other Segments from RE Catch All in Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

delete from 
	a
from 
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] b
on 
	a.ContactId = b.ContactId
where 
	a.SegCode = '054'
and
	b.SegCode in 
		(
		'036','037','038','039','040',
		'041','042','043','044','045',
		'046','048','049','053')

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Creation Date For RE to Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

--add in values

update
	a
set
	CreatedDate = b.FormattedCreationDateYYYYMMDD
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[SCV_Supporters] b
on
	a.ContactID = b.ContactID
where
	a.segcode in
		(
		'036','037','038','039','040',
		'041','042','043','044','045',
		'046','048','049','053','054','050'
		)


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for RE on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	FirstDate = d.FirstDate,
	LastDate = d.LastDate
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select 
		c.ContactId,
		max(b.DTE) LastDate,
		min(b.DTE) FirstDate 
	from  
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Actions] b
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] c
	on
		b.Records_ID = c.RecordsTableID
	group by
		c.ContactId
	) d
on 
	a.ContactId = d.contactid
where
	a.segcode in
		(
		'036','037','038','039','040',
		'041','042','043','044','045',
		'046','048','049','053','054'
		)


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Non Sporting on Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	FirstDate = b.FirstDate,
	LastDate = b.LastDate,
	NumberofActions = b.cn
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select
		Contactid,
		max(FormattedActivityDate) LastDate,
		min(FormattedActivityDate) FirstDate,
		count(*) cn
	from
		[NSPCC_Supporter_Portfolio].[dbo].[AS400Master_Supporter_Activities]
	where
		ActivityCode in ('RBBGD' ,'PLAY' ,'HACK','OWN EVENT','STEP' ,'GG4H' ,'GHERKIN')
	or
		ActivityCode like 'NONS%'
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '050'

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Non Sporting on Supporter_Portfolio_Supporters Table - Spec Event'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.FirstDate = case when isnull(a.FirstDate,'31 Dec 2100') < isnull(b.FirstDate,'31 Dec 2100') then a.FirstDate else b.Firstdate end,
	a.LastDate = case when isnull(a.LastDate,'01 Jan 1900') > isnull(b.LastDate,'01 Jan 1900') then a.LastDate else b.LastDate end,
	NumberofActions = isnull(NumberofActions,0)+isnull(b.cn,0)
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select 
		a.contactid,
		min(c.START_DATE) FirstDate,
		max(c.START_DATE) LastDate,
		count(*) cn
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Participants] b
	on
		a.RecordsTableID = b.RecordsID
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SPECIAL_EVENT] c
	on
		b.EventID = c.ID
	where

		c.CATEGORY = 4
	and
		c.TypeID not in (16429,8403)
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '050'


	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Dates for Non Sporting on Supporter_Portfolio_Supporters Table - Patic'
set @StageOrderId = @StageOrderId+1

begin try

update
	a
set
	a.FirstDate = case when isnull(a.FirstDate,'31 Dec 2100') < isnull(b.FirstDate,'31 Dec 2100') then a.FirstDate else b.Firstdate end,
	a.LastDate = case when isnull(a.LastDate,'01 Jan 1900') > isnull(b.LastDate,'01 Jan 1900') then a.LastDate else b.LastDate end,
	NumberofActions = isnull(NumberofActions,0)+isnull(b.cn,0)
from
	[NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters] a
inner join
	(
	select 
		a.contactid,
		min(c.START_DATE) FirstDate,
		max(c.START_DATE) LastDate,
		count(*) cn
	from
		[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] a
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_Participants] b
	on
		a.RecordsTableID = b.RecordsID
	inner join
		[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_SPECIAL_EVENT] c
	on
		b.EventID = c.ID
	where
		c.TypeID = 18290
	group by
		ContactId
	) b
on
	a.ContactId = b.ContactId
where
	a.SegCode = '050'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Set First Value to 0 for RE in Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try






/************/






update
	[NSPCC_Supporter_Portfolio].[dbo].Supporter_Portfolio_Supporters
set
	FirstValue = 0
where
	FirstValue is null


	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Set Last Value to 0 for RE in Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update
	[NSPCC_Supporter_Portfolio].[dbo].Supporter_Portfolio_Supporters
set
	LastValue = 0
where
	LastValue is null


	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Set Total Value to 0 for RE in Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try


update
	[NSPCC_Supporter_Portfolio].[dbo].Supporter_Portfolio_Supporters
set
	TotalValue = 0
where
	TotalValue is null

	insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Set Last Date to Null When Later than 2100 in Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

Update [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_Supporters]
set lastdate = null where year(lastdate) >2100

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Delete Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try

-- drop the tables to start afresh
IF EXISTS 
	(SELECT * FROM sys.objects WHERE object_id = OBJECT_ID('Supporter_Portfolio_SupporterPortfolioSegments'))
			begin 
				drop table [NSPCC_Supporter_Portfolio].[dbo].[Supporter_Portfolio_SupporterPortfolioSegments] 
end

-- Use previous supporter table

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Create Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try


Create Table [Supporter_Portfolio_SupporterPortfolioSegments]
	(
	ID int identity(1,1) not null primary key,
	Code varchar (7) not null,
	ContactID int not null,
	NumberofActions int,
	FirstValue numeric(18,2),
	TotalValue numeric(18,2),
	LastValue numeric(18,2),
	CreatedDate Datetime,
	FirstDate DateTime,
	LastDate DateTime,
	EmailFirstSent Varchar(50),
	EmailFirstOpen Varchar(50),
	EmailLastOpen Varchar(50),
	constraint UC_SoupPortSeg Unique (Code, ContactId)
	)

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Populate Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try

-- insert all the records
Insert into [Supporter_Portfolio_SupporterPortfolioSegments]
	(
	Code,
	ContactID,
	NumberofActions,
	FirstValue,
	TotalValue,
	LastValue,
	CreatedDate,
	FirstDate,
	LastDate,
	EmailFirstSent,
	EmailFirstOpen,
	EmailLastOpen
	)
Select
	SegCode Code,
	ContactID,
	NumberofActions,
	FirstValue,
	TotalValue,
	LastValue,
	CreatedDate,
	FirstDate,
	LastDate,
	EmailFirstSent,
	EmailFirstOpen,
	EmailLastOpen
from
	[Supporter_Portfolio_Supporters]

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Active AS400 Codes to Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try
-- update AS400 active codes -- 0w3ng4rr1ty adding the Active 



Update 
	[Supporter_Portfolio_SupporterPortfolioSegments]
set 
	code = 
		Case
		/*Regular Givers*/
			When Code = '001'																then '0101101'

		/*Cash*/
			when Code = '003'
				and
					(
						LastDate >= dateadd(month,-12,getdate())
					OR
						(
							NumberofActions = 1
						AND
							LastValue >= 20 
						AND
							LastDate >= dateadd(month,-24,getdate())
						)
					OR
						(
							NumberofActions > 1
						AND
							LastDate >= dateadd(month,-36,getdate())
						)
					)																		then '0102103'

		/*Text To Give*/
			when Code = '004' and CreatedDate >= dateadd(month,-36,getdate())				then '0103105'

		/*Payroll Giver*/
			When Code = '005'																then '0104107'

		/*Legacy Enquirer*/
			when Code = '007' and LastDate >= dateadd(month,-60,getdate())					then '0105109'

		/*Legacy Intender*/
			when Code = '008' and LastDate >= dateadd(month,-60,getdate())					then '0106111'

		/*Legacy Pledger*/
			when Code = '009' and LastDate >= dateadd(month,-60,getdate())					then '0107113'

		/*Tribute Fund Donations*/
			when Code = '010' and LastDate >= dateadd(month,-36,getdate())					then '0108115'

		/*Tribute Fundholders*/
			when Code = '011' and LastDate >= dateadd(month,-36,getdate())					then '0109117'

		/*In Memory Donations*/
			when Code = '012' and LastDate >= dateadd(month,-36,getdate())					then '0110119'

		/*Funeral Directors*/
			when Code = '013' and LastDate >= dateadd(month,-36,getdate())					then '0111121'

		/*Schools*/
			when Code = '014' and LastDate >= dateadd(month,-36,getdate())					then '0112123'

		/*Raffle Donations*/
			when Code = '015' 			
				and
					(
						LastDate >= dateadd(month,-12,getdate())
					OR
						(
							NumberofActions = 1
						AND
							LastValue >= 20 
						AND
							LastDate >= dateadd(month,-24,getdate())
						)
					OR
						(
							NumberofActions > 1
						AND
							LastDate >= dateadd(month,-36,getdate())
						)
					)																		then '0213125'

		/*Raffle Purchaser*/
			when Code = '016' and LastDate >= dateadd(month,-36,getdate())					then '0214127'

		/*Lottery Player*/
			when Code = '017' 
																							then '0215129'

		/*Campaigner Action*/
			when Code = '019' and LastDate >= dateadd(month,-24,getdate())					then '0316131'

		/*Christmas Card Donator*/
			when Code = '020' and LastDate >= dateadd(month,-36,getdate())					then '0417133'

		/*Christmas Card Purchaser*/
			when Code = '021' and LastDate >= dateadd(month,-36,getdate())					then '0418135'

		/*LFS Non Payers*/
			when Code = '022' and LastDate >= dateadd(month,-36,getdate())					then '0419137'

		/*LFS Purchaser*/
			when Code = '023' and LastDate >= dateadd(month,-36,getdate())					then '0420139'

		/*Product Purchased*/
			when Code = '024' and LastDate >= dateadd(month,-36,getdate())					then '0421141'

		/*Event Paid Participants*/
			when Code = '025' and LastDate >= dateadd(month,-36,getdate())					then '0522143'

		/*Sponsorship*/
			when Code = '026' and LastDate >= dateadd(month,-36,getdate())					then '0523145'

		/*Trust Donations*/
			when Code = '028' and LastDate >= dateadd(month,-36,getdate())					then '0624147'

		/*Clubs and Organisations*/
			when Code = '029' and LastDate >= dateadd(month,-36,getdate())					then '0625149'

		/*Corporate Donations*/
			when Code = '030' and LastDate >= dateadd(month,-36,getdate())					then '0626151'

		/*Local Authorities*/
			when Code = '031' and LastDate >= dateadd(month,-36,getdate())					then '0627153'

		/*Community Donations*/
			when Code = '032' and LastDate >= dateadd(month,-36,getdate())					then '0728155'

		/*NSPCC Credit Card Holders*/
			when Code = '034' and LastDate >= dateadd(month,-36,getdate())					then '0829157'

		/*Non Donating Prospects\Campaigning Unknowns*/
			when Code = '035' and LastDate >= dateadd(month,-36,getdate())					then '0830159'

		/*Value Exchange*/
			when Code = '055' and LastDate >= dateadd(month,-24,getdate())					then '5548193'			-- changed from '5547193'			-- SJBDBLCHECK2018310 -- 

		/*Little Stars*/
			when Code = '056' and LastDate >= dateadd(month,-24,getdate())					then '5650195'			-- changed from '5649195'
	
		/*All other codes*/
			else																				Code
	end

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


-- 0w3ng4rr1ty Code Section 

set @Stage = 'Add Lapsed AS400 Codes to Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try

-- update AS400 lapsed codes
Update 
	[Supporter_Portfolio_SupporterPortfolioSegments]
set 
	code = 
		Case
		/*Regular Givers*/
			When Code = '002'																then '0101102'

		/*Cash*/
			when Code = '003'																then '0102104'

		/*Text To Give*/
			when Code = '004'																then '0103106'

		/*Payroll Giver*/
			When Code = '006'																then '0104108'

		/*Legacy Enquirer*/
			when Code = '007'																then '0105110'

		/*Legacy Intender*/
			when Code = '008'																then '0106112'

		/*Legacy Pledger*/
			when Code = '009'																then '0107114'

		/*Tribute Fund Donations*/
			when Code = '010'																then '0108116'

		/*Tribute Fundholders*/
			when Code = '011'																then '0109118'

		/*In Memory Donations*/
			when Code = '012'																then '0110120'

		/*Funeral Directors*/
			when Code = '013'																then '0111122'

		/*Schools*/
			when Code = '014'																then '0112124'

		/*Raffle Donations*/
			when Code = '015' 																then '0213126'

		/*Raffle Purchaser*/
			when Code = '016'																then '0214128'

		/*Lottery Player*/
			when Code = '018'																then '0215130'

		/*Campaigner Action*/
			when Code = '019'																then '0316132'

		/*Christmas Card Donator*/
			when Code = '020'																then '0417134'

		/*Christmas Card Purchaser*/
			when Code = '021'																then '0418136'

		/*LFS Non Payers*/
			when Code = '022'																then '0419138'

		/*LFS Purchaser*/
			when Code = '023'																then '0420140'

		/*Product Purchased*/
			when Code = '024'																then '0421142'

		/*Event Paid Participants*/
			when Code = '025'																then '0522144'

		/*Sponsorship*/
			when Code = '026'																then '0523146'

		/*Trust Donations*/
			when Code = '028'																then '0624148'

		/*Clubs and Organisations*/
			when Code = '029'																then '0625150'

		/*Corporate Donations*/
			when Code = '030'																then '0626152'

		/*Local Authorities*/
			when Code = '031'																then '0627154'

		/*Community Donations*/
			when Code = '032'																then '0728156'

		/*NSPCC Credit Card Holders*/
			when Code = '034'																then '0829158'

		/*Non Donating Prospects\Campaigning Unknowns*/
			when Code = '035'																then '0830160'

		/*Value Exchange*/
			when Code = '055'																then '5548194'

		/*Little Stars*/
			when Code = '056'																then '5650196'


		/*All other codes*/
			else																				Code
	end
insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Lapsed RE Codes to Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try

-- update archive RE as lapsed

update 
	sps
set 
	code = 
		Case
		/*Committee Members*/
			When sps.Code = '036'																then '0331162'

		/*Major Supporters*/
			When sps.Code = '037'																then '0132164'

		/*NSPCC Family*/
			When sps.Code = '038'																then '0333166'

		/*Celebrity*/
			When sps.Code = '039'																then '0334168'

		/*NSPCC Trustee/Council Member*/
			When sps.Code = '040'																then '0335170'

		/*Partnership*/
			When sps.Code = '041'																then '0336172'

		/*Community*/
			When sps.Code = '042'																then '0737174'

		/*Event Registrations*/
			When sps.Code = '043'																then '0538176'

		/*Sporting Events Participants*/
			When sps.Code = '044'																then '0539178'

		/*Auction Donors*/
			When sps.Code = '045'																then '0340180'

		/*Special Event Participant*/
			When sps.Code = '048'																then '0641182'

		/*Special Event Organisers*/
			When sps.Code = '049'																then '0342184'

		/*Non Sporting Mass Participation Events*/
			When sps.Code = '050'																then '0543186'

		/*Volunteer Board Members*/
			When sps.Code = '053'																then '0345190'

		/*Raiser's Edge Catch All*/
			When sps.Code = '054'																then '0846192'

		/*All other codes*/
			else																				sps.Code
	end
from
	[Supporter_Portfolio_SupporterPortfolioSegments] sps
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] rc
on
	sps.ContactID = RC.ContactID
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] c
on
	rc.Constit_ID = c.CONSTIT_ID
where
	c.CODE = 6746	


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Add Active RE Codes to Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try

--update RE active

update 
	sps
set 
	code = 
		Case
		/*Committee Members*/
			When sps.Code = '036' and sps.LastDate >= dateadd(month,-24,getdate())				then '0331161'

		/*Major Supporters*/
			When sps.Code = '037' and sps.LastDate >= dateadd(month,-24,getdate())				then '0132163'

		/*NSPCC Family*/
			When sps.Code = '038' and sps.LastDate >= dateadd(month,-24,getdate())				then '0333165'

		/*Celebrity*/
			When sps.Code = '039' and sps.LastDate >= dateadd(month,-24,getdate())				then '0334167'

		/*NSPCC Trustee/Council Member*/
			When sps.Code = '040'																then '0335169'

		/*Partnership*/
			When sps.Code = '041' and sps.LastDate >= dateadd(month,-24,getdate())				then '0336171'

		/*Community*/
			When sps.Code = '042' and sps.LastDate >= dateadd(month,-24,getdate())				then '0737173'

		/*Event Registrations*/
			When sps.Code = '043' and sps.LastDate >= dateadd(month,-12,getdate())				then '0538175'

		/*Sporting Events Participants*/
			When sps.Code = '044' and sps.LastDate >= dateadd(month,-12,getdate())				then '0539177'

		/*Auction Donors*/
			When sps.Code = '045' and sps.LastDate >= dateadd(month,-24,getdate())				then '0340179'

		/*Special Event Participant*/
			When sps.Code = '048' and sps.LastDate >= dateadd(month,-24,getdate())				then '0641181'

		/*Special Event Organisers*/
			When sps.Code = '049' and sps.LastDate >= dateadd(month,-24,getdate())				then '0342183'

		/*Non Sporting Mass Participation Events*/
			When sps.Code = '050' and sps.LastDate >= dateadd(month,-24,getdate())				then '0543185'

		/*Volunteer Board Members*/
			When sps.Code = '053' and sps.LastDate >= dateadd(month,-24,getdate())				then '0345189'

		/*Raiser's Edge Catch All*/
			When sps.Code = '054' and sps.LastDate >= dateadd(month,-24,getdate())				then '0846191'

		/*All other codes*/
			else																				sps.Code
	end
from
	[Supporter_Portfolio_SupporterPortfolioSegments] sps


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Sporting Events Participants Active Codes in Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try



--Sporting Events Participants Active

update 
	sps
set 
	code = '0539177'
from
	[Supporter_Portfolio_SupporterPortfolioSegments] sps
inner join
	Last_Sum_Transaction lst
on
	sps.ContactID = lst.ContactId
where
	sps.Code = '044'
and
	lst.FormattedTransactionDate >= dateadd(month,-24,getdate())
and
	lst.TransactionDonationType in ('SPON','EVNT')


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update NSPCC Trustee/Council Member Laped Codes in Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try

--NSPCC Trustee/Council Member Laped

update
	sps
set
	code = '0335170'
from
	[Supporter_Portfolio_SupporterPortfolioSegments] sps
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[Staging_RE_Contacts] rc
on
	sps.ContactID = RC.ContactID
inner join
	[NSPCC_Supporter_Portfolio].[dbo].[RE_Live_CONSTITUENT_CODES] c
on
	rc.Constit_ID = c.CONSTIT_ID
inner join
	[NSPCC_Supporter_Portfolio].[dbo].RE_Live_ConstituentCode te
on	
	c.CODE = te.TABLEENTRIESID
where
	te.LONGDESCRIPTION = 'Former NSPCC Trustee'
and
	sps.Code = '040'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update All Other RE Laped Codes in Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try

-- update all other RE as lapsed


update 
	sps
set 
	code = 
		Case
		/*Committee Members*/
			When sps.Code = '036'																then '0331162'

		/*Major Supporters*/
			When sps.Code = '037'																then '0132164'

		/*NSPCC Family*/
			When sps.Code = '038'																then '0333166'

		/*Celebrity*/
			When sps.Code = '039'																then '0334168'

		/*NSPCC Trustee/Council Member*/
			When sps.Code = '040'																then '0335170'

		/*Partnership*/
			When sps.Code = '041'																then '0336172'

		/*Community*/
			When sps.Code = '042'																then '0737174'

		/*Event Registrations*/
			When sps.Code = '043'																then '0538176'

		/*Sporting Events Participants*/
			When sps.Code = '044'																then '0539178'

		/*Auction Donors*/
			When sps.Code = '045'																then '0340180'

		/*Special Event Participant*/
			When sps.Code = '048'																then '0641182'

		/*Special Event Organisers*/
			When sps.Code = '049'																then '0342184'

		/*Non Sporting Mass Participation Events*/
			When sps.Code = '050'																then '0543186'

		/*Volunteer Board Members*/
			When sps.Code = '053'																then '0345190'

		/*Raiser's Edge Catch All*/
			When sps.Code = '054'																then '0846192'

		/*All other codes*/
			else																				sps.Code
	end
from
	[Supporter_Portfolio_SupporterPortfolioSegments] sps

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Update Email ENgagers Codes in Supporter_Portfolio_SupporterPortfolioSegments Table'
set @StageOrderId = @StageOrderId+1

begin try

-- update Email Engagers


update
	[Supporter_Portfolio_SupporterPortfolioSegments]
set
	Code =
		Case
			when LastDate >= dateadd(month,-24,getdate())										then '0944187'
			else																					 '0944188'
		end
where
	code = '051'


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Set First Date to Null When Earlier than 1917 in Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

--remove date errors:

update 
	[Supporter_Portfolio_SupporterPortfolioSegments]
set
	FirstDate = null
where
	year(FirstDate) < 1917

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Set Creation Date to Null When Earlier than 1917 in Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update 
	[Supporter_Portfolio_SupporterPortfolioSegments]
set
	CreatedDate = null
where
	year(CreatedDate) < 1917

insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'Set Last Date to Null When Earlier than 1917 in Supporter_Portfolio_Supporters Table'
set @StageOrderId = @StageOrderId+1

begin try

update 
	[Supporter_Portfolio_SupporterPortfolioSegments]
set
	LastDate = null
where
	year(LastDate) < 1917


insert into UpdateRunLog
	(
	RunId,
	Success,
	RowsAffected,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'Y',
	@@ROWCOUNT,
	@StageOrderid,
	@Stage,
	getdate()
	)

end try


begin catch

insert into UpdateRunLog
	(
	RunId,
	Success,
	ErrorMessage,
	StageOrderId,
	Stage,
	RunDateTime
	)
values
	(
	@RUNID,
	'N',
	Error_Message(),
	@StageOrderId,
	@Stage,
	getdate()
	)


set @ErrorMessage = Error_Message()
set @ErrorSeverity = Error_severity()
set @ErrorState = Error_state()

RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)

end catch


set @Stage = 'End Run'
set @StageOrderId = @StageOrderId+1


insert into 
	UpdateRunLog
	(
	RunID,
	StageOrderId,
	Stage,
	Success,
	RunDateTime
	)
select
	@RunId,
	@StageOrderId,
	@Stage,
	'Y',
	getdate()











